openapi: 3.0.3

info:
  title: Inperium Server Talk Number Porting API
  description: |
    The initial version of Inperium Talk Number Porting API.
  version: 1.0.0-SNAPSHOT

servers:
  - url: http://api.inperium.com/v1/talkNumberPorting
  - url: https://api.inperium.com/v1/talkNumberPorting

security:
  - BearerAuth: [ ]
  - ApiKeyAuth: [ ]

paths:
  /health:
    get:
      tags:
        - Health Checks
      summary: Checks the health of the microservice
      operationId: checkHealth
      responses:
        200:
          description: An empty response that is used for OK non-returning operations
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /portOrders:
    post:
      tags:
        - Port Orders
      summary: Create a new port order
      operationId: createPortOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortOrderRequest'
      responses:
        201:
          description: A new port order has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortOrder'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

components:

  securitySchemes:

    BearerAuth:
      type: http
      scheme: bearer

    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  parameters:

    ResourceId:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    QueryPageNumber:
      name: pageNumber
      in: query
      description: Query parameter for the "pageNumber"
      schema:
        type: integer
        format: int64
    QueryPageSize:
      name: pageSize
      in: query
      description: Query parameter for the "pageSize"
      schema:
        type: integer
        format: int64
    QuerySort:
      name: sort
      in: query
      description: Query parameter for the "sort" criteria
      schema:
        type: string

  schemas:

    ResponseError:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Http status code
        code:
          type: string
          format: uuid
          description: Optional code of the exception
        message:
          type: string
          description: Error message
        errors:
          type: object
          description: Map of field -> list of errors
    Id:
      type: string
      format: uuid

    Address:
      type: object
      required:
        - address
        - city
        - state
        - zip
        - tenantId
      properties:
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        tenantId:
          $ref: '#/components/schemas/Id'

    PortOrderStatus:
      type: string
      enum:
        - CREATED
        - IN_PROGRESS
        - FAILED
        - REJECTED
        - COMPLETED

    PhoneNumberPortStatus:
      type: string
      enum:
        - NONE
        - WAIT
        - IN_PROGRESS
        - RECEIVED
        - INFORMATION_REQUIRED
        - SUBMITTED_TO_CARRIER
        - PORT_SCHEDULED
        - CANCELED
        - COMPLETED

    PhoneNumberType:
      type: string
      description: Type of the phone number
      enum:
        - LOCAL
        - TOLL_FREE

    CountryCode:
      type: string
      description: Country code (ISO alpha-2)

    PhoneNumber:
      type: object
      required:
        - phoneNumber
        - tenantId
      properties:
        phoneNumber:
          type: string
        twilioSid:
          type: string
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        city:
          type: string
        state:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        portStatus:
          $ref: '#/components/schemas/PhoneNumberPortStatus'
        description:
          type: string
        tenantId:
          $ref: '#/components/schemas/Id'

    DataFile:
      type: object
      required:
        - obsId
        - tenantId
      properties:
        obsId:
          $ref: '#/components/schemas/Id'
        tenantId:
          $ref: '#/components/schemas/Id'

    PortOrderRequest:
      type: object
      required:
        - portRequestName
        - address
        - phoneNumbers
        - letterOfAuthorization
        - billingStatements
        - statusCallback
        - tenantId
        - accountSid
      properties:
        portRequestName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        letterOfAuthorization:
          $ref: '#/components/schemas/DataFile'
        billingStatements:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
        statusCallback:
          type: string
        tenantId:
          $ref: '#/components/schemas/Id'
        accountSid:
          type: string

    PortOrder:
      allOf:
        - $ref: '#/components/schemas/PortOrderRequest'
        - type: object
          required:
            - id
            - status
          properties:
            id:
              $ref: '#/components/schemas/Id'
            status:
              $ref: '#/components/schemas/PortOrderStatus'
            description:
              type: string