openapi: 3.0.3

info:
  title: Talk API
  description: |
    The Inperium Talk API provides access to the Inperium Talk service including the ability to make calls, add contacts, configure auto receptionist settings, etc.
  version: 1.0.0

servers:
  - url: http://api.inperium.com/v1/talk
  - url: https://api.inperium.com/v1/talk

security:
  - BearerAuth: [ ]
  - ApiKeyAuth: [ ]

tags:
  - name: Application Actuator
    description: |
      Inperium Talk enables users to monitor and manage the application.
  - name: Addresses
    description: |
      To ensure the billing is correct, the tenants should maintain a valid address in the Inperium Talk settings.
  - name: Audio Files
    description: |
      Inperium Talk enables you to create an audio library with custom recordings that you can leverage in auto receptionists and IVR menus.
  - name: Auto Receptionists
    description: |
      Auto receptionists streamline call routing both during work hours and off-duty. An auto receptionist represents an automatic workflow and consists of configurable rules and steps. For example, you set a greeting audio and then enable an IVR menu that helps forward the call to the right manager. Auto receptionists can be multi-tiered and reference each other.
  - name: Calls
    description: |
      Inperium Talk enables users to make calls and logs all statistics about them such as the duration of the call, the direction of call (inbound, outbound), and call participants.
  - name: Call Callbacks
    description: |
      We use callbacks from our partner & service provider to manage calls within Inperium Talk system.
  - name: Contacts
    description: |
      Add your clients and business partners to the Contacts list. The Contacts store information such as a name, work and personal phone numbers, and address.
  - name: IVR Callbacks
    description: |
      IVR menu is a simple and interactive routing system. You can configure an action for each digit. The callbacks help manage user inputs.
  - name: Participants
    description: |
      Each call has multiple participantsâ€”persons taking part in the call either as a caller or as recipients.
  - name: Phone Numbers
    description: |
      Inperium Talk enables users to create VoIP phone numbers and leverage them for making calls and sending messages.
  - name: Phone Number Webhooks
    description: |
      Inperium Talk enables you to create and register phone numbers.
  - name: Recordings
    description: |
      The recordings are the messages the clients leave when nobody picks the line and recorded parts the calls. It's a safe and reliable way to gather inquires when your managers are out of office and save the most important parts of the calls.
  - name: Recording Callbacks
    description: |
      Inperium Talk enables you to create recordings.
  - name: Regulatory Bundles
    description: |
      Depending on your location and various usage options, you might be subject to taxes and fees. These taxes will be added to your bill.
  - name: Reports
    description: |
      Inperium Talk creates reports to help you assess productivity and see how your metrics change over time.
  - name: Report Data
    description: |
      The report data is the actual metrics and values.
  - name: Services
    description: |
      Inperium Talk provides various communication services such as the ability to generate voice recordings based on text and vice versa.
  - name: Tenant Settings
    description: |
      Inperium Talk enables users to get tenant settings.
  - name: User Settings
    description: |
      Each user has a unique profile that contains information about the default contact number, forwarding options, and many more.
  - name: Voicemails
    description: |
      The voicemails are the messages the clients leave when nobody picks the line. It's a safe and reliable way to gather inquires when your managers are out of office.
  - name: Widgets
    description: In Inperium Talk, widgets are dashboard elements such as charts and lists that help track your productivity.

paths:

  /health:
    get:
      tags:
        - Application Actuator
      summary: Retrieve the application health status
      operationId: health
      responses:
        200:
          description: The application health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /info:
    get:
      tags:
        - Application Actuator
      summary: Retrieve the application info
      operationId: info
      responses:
        200:
          description: The application info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /addresses:
    get:
      tags:
        - Addresses
      summary: List addresses
      description: Use this endpoint to retrieve addresses. This request supports paging and sorting.
      operationId: getAddresses
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The addresses have been retrieved. Returns addresses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Addresses
      summary: Create an address
      description: Use this endpoint to add a new address for a tenant.
      operationId: createAddress
      requestBody:
        description: In the request body, pass the AddressRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        201:
          description: The address has been created. Returns the address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /audioFiles:
    get:
      tags:
        - Audio Files
      summary: List audio files
      description: Use this endpoint to retrieve a list of available audio files stored in the Audio Library. This request supports paging, sorting, and filtering.
      operationId: getAudioFiles
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
        - name: name
          in: query
          description: The name of the audio file.
          schema:
            type: string
      responses:
        200:
          description: The list of audio files has been retrieved. Returns audio files.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFiles'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Audio Files
      summary: Add an audio file
      description: Use this endpoint to upload a new audio file.
      operationId: uploadAudioFile
      requestBody:
        description: In the request body, pass the AudioFileUploadRequest object.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioFileUploadRequest'
      responses:
        201:
          description: The audio file has been created. Returns an audio file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFile'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /audioFiles/{id}:
    get:
      tags:
        - Audio Files
      summary: Get audio file by ID
      description: Use this endpoint to retrieve details on specific audio file based on its ID. Provide an ID in the path.
      operationId: getAudioFile
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The audio file details have been retrieved. Returns an audio file details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFile'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Audio Files
      summary: Delete an audio file
      description: Use this endpoint to remove an audio file. Provide an ID in the path.
      operationId: deleteAudioFile
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The audio file has been deleted.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Audio Files
      summary: Partially update an audio file
      description: Use this endpoint to partially update the audio file details. Provide an ID in the path.
      operationId: updateAudioFile
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated AudioFileUpdateRequest object.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioFileUpdateRequest'
      responses:
        200:
          description: The audio file has been updated. Returns the audio file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFile'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /autoReceptionists:
    get:
      tags:
        - Auto Receptionists
      summary: List auto receptionists
      description: Use this endpoint to retrieve a list of auto receptionists configured for this tenant. The request support paging, sorting, and filtering.
      operationId: findAutoReceptionists
      parameters:
        - name: name
          in: query
          description: The auto receptionist name.
          schema:
            type: string
            example: like::Departments
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The auto receptionists have been retrieved. Returns auto receptionists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionists'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Auto Receptionists
      summary: Create an auto receptionist
      description: Use this endpoint to configure a new auto receptionist.
      operationId: createAutoReceptionist
      requestBody:
        description: In the request body, pass the AutoReceptionistRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReceptionistRequest'
      responses:
        201:
          description: A new auto receptionist has been created. Returns an auto receptionist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /autoReceptionists/{id}:
    get:
      tags:
        - Auto Receptionists
      summary: Retrieve an auto receptionist
      description: Use this endpoint to retrieve details for a specific auto receptionist by its ID. Provide an ID in the path.
      operationId: findAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The auto receptionist details have been retrieved. Returns an auto receptionist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Auto Receptionists
      summary: Partially update an auto receptionist
      description: Use this endpoint to partially modify an existing auto receptionist. Provide an ID in the path.
      operationId: partiallyUpdateAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated AutoReceptionistRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReceptionistRequest'
      responses:
        200:
          description: The auto receptionist has been modified. Returns an auto receptionist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Auto Receptionists
      summary: Update an auto receptionist
      description: Use this endpoint to completely overwrite the current auto receptionist settings. Provide an ID in the path.
      operationId: updateAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated AutoReceptionistRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReceptionistRequest'
      responses:
        200:
          description: The auto receptionist has been modified. Returns the auto receptionist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Auto Receptionists
      summary: Delete an auto receptionist
      description: Use this endpoint to remove an auto receptionist. Provide an ID in the path.
      operationId: deleteAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The auto receptionist has been deleted.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /webhooks/calls/handle:
    x-access: private
    post:
      tags:
        - Call Webhooks
      x-access: private
      summary: Handle inbound or outbound call
      description: THIS IS INTERNAL ENDPOINT.
      operationId: callHandle
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallWebhookRequest'
      responses:
        200:
          description: A new call has been handled. Returns the instructions for the call.
          content:
            application/xml:
              schema:
                type: string
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /webhooks/calls/status:
    x-access: private
    post:
      tags:
        - Call Webhooks
      summary: Receive status of the call.
      description: THIS IS INTERNAL ENDPOINT.
      operationId: callStatus
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallStatusWebhookRequest'
      responses:
        200:
          description: The status has been received.
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /webhooks/calls/fallback:
    x-access: private
    post:
      tags:
        - Call Webhooks
      summary: Receive a fallback of error during the call
      description: THIS IS INTERNAL ENDPOINT.
      operationId: callFallback
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallStatusWebhookRequest'
      responses:
        200:
          description: Fallback has been received. Returns the instructions for the call.
          content:
            application/xml:
              schema:
                type: string
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls:
    get:
      tags:
        - Calls
      summary: List calls
      description: Use this endpoint to list all calls made, received, or missed by users. The request supports paging, sorting, and filtering.
      operationId: getCalls
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
        - name: direction
          in: query
          description: The direction of the call. Available options are `inbound` or `outbound`.
          schema:
            type: string
        - name: callerStatus
          in: query
          description: The status of the caller. It can be `started`, `queued`, `ringing`, `in_progress`, `canceled`, `completed`, `forwarded`, `busy`, `failed`, `no_answer`.
          schema:
            type: string
        - name: recipientStatus
          in: query
          description: The status of the recipient. It can be `started`, `queued`, `ringing`, `in_progress`, `canceled`, `completed`, `forwarded`, `busy`, `failed`, `no_answer`.
          schema:
            type: string
        - name: participantStatus
          in: query
          description: The status of any call participant. It can be `started`, `queued`, `ringing`, `in_progress`, `canceled`, `completed`, `forwarded`, `busy`, `failed`, `no_answer`.
          schema:
            type: string
        - name: callerPhoneNumber
          in: query
          description: The phone number of the caller.
          schema:
            type: string
        - name: recipientPhoneNumber
          in: query
          description: The phone number of the recipient.
          schema:
            type: string
        - name: participantPhoneNumber
          in: query
          description: The phone number of any call participant.
          schema:
            type: string
        - name: callerPhoneNumberId
          in: query
          description: The ID of caller's phone number.
          schema:
            type: string
        - name: recipientPhoneNumberId
          in: query
          description: The ID of recipient's phone number.
          schema:
            type: string
        - name: participantPhoneNumberId
          in: query
          description: The ID of any participant's phone number.
          schema:
            type: string
        - name: recorded
          in: query
          description: Whether the call is recorded or not.
          schema:
            type: boolean
        - name: quickFilter
          in: query
          description: |
            A quick filter for discovering missed and unanswered calls. \
            **Note**:
            * Consider combining `MISSED_BY_ME` and `MISSED_BY_TENANT`
              with `participantPhoneNumber` and `participantPhoneNumberId` parameters.
            * Or combine`UNANSWERED_FROM_ME` and `UNANSWERED_FROM_TENANT`
              with `callerPhoneNumber` and `callerPhoneNumberId` parameters.
          schema:
            type: string
            enum:
              - MISSED_BY_ME
              - MISSED_BY_TENANT
              - UNANSWERED_FROM_ME
              - UNANSWERED_FROM_TENANT
      responses:
        200:
          description: The list of calls has been retrieved. Returns calls.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calls'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Calls
      summary: Create a call
      description: Use this endpoint to create a new outbound call.
      operationId: createCall
      requestBody:
        description: In the request body, pass the CallRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallRequest'
      responses:
        201:
          description: A new voice call has started. Returns a call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/find/{sid}:
    get:
      tags:
        - Calls
      summary: Find a call
      description: Use this endpoint to locate and retrieve a call by its SID. Provide a SID in the path.
      operationId: findBySid
      parameters:
        - name: sid
          description: A unique identifier of the call.
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/token:
    get:
      tags:
        - Calls
      summary: Retrieve a token
      description: Use this endpoint to get a voice token to connect to SDK.
      operationId: getVoiceToken
      parameters:
        - name: platform
          description: A platform where Inperium Talk runs. If not specified, the default is `WEB`.
          in: query
          schema:
            type: string
            enum:
              - IOS
              - ANDROID
              - WEB
            default: WEB
      responses:
        200:
          description: A new voice token has been created. Returns a voice token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceToken'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/{id}:
    get:
      tags:
        - Calls
      summary: Get call details
      description: Use this endpoint to retrieve call details by its ID. Provide an ID in the path.
      operationId: getCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The call details have been retrieved. Returns a call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Calls
      summary: Partially update a call
      description: Use this endpoint to partially modify a call without overwriting it. Provide an ID in the path.
      operationId: patchCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated CallChangeRequest.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallChangeRequest'
      responses:
        200:
          description: The call has been updated. Returns a call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Calls
      summary: Update a call
      description: Use this endpoint to update a call. The call details will be overwritten. Provide an ID in the path.
      operationId: updateCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the CallRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallRequest'
      responses:
        200:
          description: The call has been updated. Returns an updated call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Calls
      summary: Delete a call
      description: Use this endpoint to remove a voice call. Provide an ID in the path.
      operationId: deleteCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/{id}/participants:
    post:
      tags:
        - Call Participants
      summary: Add participant to the call
      description: Use this endpoint to add a new participant to a call. Provide a call ID in the path.
      operationId: createParticipant
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        required: true
        description: In the request body, pass the AddParticipantRequest object with information about a participant who joins.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParticipantRequest'
      responses:
        200:
          description: A new participant has been added to the call. Returns the call participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /webhooks/calls/{id}/participants/{subId}/hang:
    x-access: private
    post:
      tags:
        - Call Participant Webhooks
      x-access: private
      summary: Handle participant hang during the call
      description: THIS IS INTERNAL ENDPOINT.
      operationId: hangParticipant
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - $ref: '#/components/parameters/SubresourceId'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallWebhookRequest'
      responses:
        200:
          description: The participant's hang is handled. Returns the instructions for the participant.
          content:
            application/xml:
              schema:
                type: string
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/{id}/join:
    post:
      deprecated: true
      tags:
        - Calls
      summary: Join a call
      description: Use this endpoint to add a new participant to a call. Provide a call ID in the path.
      operationId: joinCall
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the CallParticipantRequest object with information about a participant who joins.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallParticipantRequest'
      responses:
        200:
          description: A new participant has joined the call. Returns the call participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/conference/{id}:
    post:
      tags:
        - Call Callbacks
      x-access: private
      summary: Twilio callback for call conference
      description: THIS IS INTERNAL ENDPOINT.
      operationId: conferenceCallback
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ConferenceSid:
                  type: string
                SequenceNumber:
                  type: string
                StatusCallbackEvent:
                  type: string
                CallSid:
                  type: string
                AccountSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/inbound:
    post:
      deprecated: true
      tags:
        - Call Callbacks
      x-access: private
      summary: Notify about new inbound call on Twilio number
      description: THIS IS INTERNAL ENDPOINT.
      operationId: startInboundCall
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                To:
                  type: string
                From:
                  type: string
                AccountSid:
                  type: string
                CallSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/outbound:
    post:
      deprecated: true
      tags:
        - Call Callbacks
      x-access: private
      summary: Notify about the start of outbound Twilio call
      description: THIS IS INTERNAL ENDPOINT.
      operationId: startOutboundCall
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallId:
                  type: string
                  format: uuid
                CallSid:
                  type: string
                To:
                  type: string
                From:
                  type: string
                AccountSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/status:
    post:
      tags:
        - Call Callbacks
      x-access: private
      summary: Set the status of the current Twilio call
      description: THIS IS INTERNAL ENDPOINT.
      operationId: setCallStatus
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallSid:
                  type: string
                To:
                  type: string
                From:
                  type: string
                AccountSid:
                  type: string
                CallStatus:
                  type: string
      responses:
        200:
          description: The status has been accepted
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/forward:
    post:
      tags:
        - Call Callbacks
      x-access: private
      summary: Forward the incoming call if the agent does not answer in the browser
      description: THIS IS INTERNAL ENDPOINT.
      operationId: forwardIncomingCall
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                DialCallStatus:
                  type: string
                CallSid:
                  type: string
                CallStatus:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/join:
    post:
      tags:
        - Call Callbacks
      x-access: private
      summary: Twilio callback for call client on app
      description: THIS IS INTERNAL ENDPOINT.
      operationId: joinUserToCall
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                AnsweredBy:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/recording:
    post:
      tags:
        - Recording Callbacks
      x-access: private
      summary: Instruct Twilio to make a POST request when the recording has finished
      description: THIS IS INTERNAL ENDPOINT.
      operationId: saveRecording
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                RecordingUrl:
                  type: string
                RecordingSid:
                  type: string
                RecordingDuration:
                  type: number
                  format: double
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/recording/{type}/{typeId}:
    post:
      tags:
        - Recording Callbacks
      x-access: private
      summary: Instruct Twilio to make a POST request when the recording has finished
      description: THIS IS INTERNAL ENDPOINT.
      operationId: saveRecordingWithType
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: typeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                RecordingUrl:
                  type: string
                RecordingSid:
                  type: string
                RecordingDuration:
                  type: number
                  format: double
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/transcribe:
    post:
      tags:
        - Recording Callbacks
      x-access: private
      summary: Instruct Twilio to make an asynchronous POST request when the transcription
        is complete
      description: THIS IS INTERNAL ENDPOINT.
      operationId: saveRecordingMessage
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                TranscriptionText:
                  type: string
                TranscriptionStatus:
                  type: string
      responses:
        200:
          description: Empty response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/ivr/{id}:
    post:
      tags:
        - IVR Callbacks
      x-access: private
      summary: Callback for IVR actions
      description: THIS IS INTERNAL ENDPOINT.
      operationId: numberIVRCallback
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallSid:
                  type: string
                Digits:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/ivr/{id}/noAction/{count}:
    post:
      tags:
        - IVR Callbacks
      x-access: private
      summary: Callback for handling when a user enters no action for IVR menu
      description: THIS IS INTERNAL ENDPOINT.
      operationId: noActionIVRCallback
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - name: count
          description: How many times we play this IVR menu
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                To:
                  type: string
                CallSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /contacts:
    get:
      tags:
        - Contacts
      summary: List contacts
      description: Use this endpoint to retrieve a list of contacts. This operation supports paging, sorting, and filtering.
      operationId: getContacts
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
        - name: fullName
          description: The contact's first and last name.
          in: query
          schema:
            type: string
      responses:
        200:
          description: The contacts have been retrieved. Returns contacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Contacts
      summary: Create a contact
      description: Use this endpoint to add a new contact.
      operationId: createContact
      requestBody:
        description: In the request body, pass the ContactRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      responses:
        201:
          description: A new contact has been created. Returns a contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Retrieve contact details
      description: Use this endpoint to retrieve a contact by its ID. Provide an ID in the path.
      operationId: getContact
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The contact details have been retrieved. Returns a contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Contacts
      summary: Update a contact
      description: Use this endpoint to modify an existing contact. The contact details will be overwritten. Provide an ID in the path.
      operationId: updateContact
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated ContactRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      responses:
        200:
          description: The contact has been modified. Returns a contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Contacts
      summary: Delete a contact
      description: Use this endpoint to remove a contact. Provide an ID in the path.
      operationId: deleteContact
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The contact has been deleted. Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /participants/{id}:
    patch:
      tags:
        - Participants
      summary: Update a participant
      description: Use this endpoint to modify a participant. Provide an ID in the path.
      operationId: patchParticipant
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the ParticipantChangeRequestBody object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantChangeRequestBody'
        required: false
      responses:
        200:
          description: The participant has been updated. Returns a call participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Participants
      summary: Remove from conference
      description: Use this endpoint to remove a person from a conference call. Provide an ID in the path.
      operationId: removeParticipant
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The participant has been removed.
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /participants:
    patch:
      tags:
        - Participants
      summary: Update participants on a call
      description: Use this endpoint to change the call participant's status, for example, to mute or put on hold. You can update one or more participants on a call.
      operationId: patchParticipants
      requestBody:
        description: In the request body, pass the array of ParticipantChangeRequest objects.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ParticipantChangeRequest'
      responses:
        200:
          description: The participants have been updated. Returns call participants.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /phoneNumbers:
    get:
      tags:
        - Phone Numbers
      summary: List phone numbers
      description: Use this endpoint to retrieve all available phone numbers. This operation supports paging, sorting, and filtering.
      operationId: getPhoneNumbers
      parameters:
        - name: userId
          in: query
          description: To search for phone numbers assigned to a specific user, provide the user's ID.
          schema:
            type: string
            example: eq::fda3787b-9f4e-45e3-91a3-46d61003c2d7
        - name: assignmentType
          in: query
          description: Search for phone numbers by their assignment type. A phone number can be assigned to `USER`, `AUTO_RECEPTIONIST`, or be `UNASSIGNED`.
          schema:
            type: string
            example: eq::USER
        - name: number
          in: query
          description: A specific phone number you're interested in. Submit a phone number.
          schema:
            minLength: 3
            type: string
        - name: type
          in: query
          description: Search for phone numbers of a specific type such as `LOCAL`, or `TOLL_FREE`.
          schema:
            type: string
            example: eq::LOCAL
        - name: regulatoryStatus
          in: query
          description: Search for phone numbers with a specific regulatory bundle status. Submit a status.
          schema:
            type: string
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The phone numbers have been retrieved. Returns phone numbers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbers'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Phone Numbers
      summary: Buy a phone number
      description: Use this endpoint to buy and register a new phone number. You can create several phone numbers at once. Charges apply in accordance with your subscription plan.
      operationId: buyPhoneNumbers
      requestBody:
        description: In the request body, pass an array of PhoneNumberRequest objects.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PhoneNumberRequest'
      responses:
        200:
          description: New phone numbers have been bought. Returns phone numbers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /phoneNumbers/{id}:
    get:
      tags:
        - Phone Numbers
      summary: Retrieve a phone number
      description: Use this endpoint to retrieve phone number details. Provide an ID in the path.
      operationId: getPhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The phone number details have been retrieved. Returns a phone number.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Phone Numbers
      summary: Update a phone number
      description: Use this endpoint to modify a phone number and overwrite its details. Provide an ID in the path.
      operationId: updatePhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated PhoneNumberRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberRequest'
      responses:
        200:
          description: The phone number details have been modified. Returns a phone number.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Phone Numbers
      summary: Update a phone number
      description: Use this endpoint to modify a phone number. Provide an ID in the path.
      operationId: patchPhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the PhoneNumberPatchRequest.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberPatchRequest'
        required: true
      responses:
        200:
          description: The phone number has been updated. Returns a phone number.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Phone Numbers
      summary: Delete a phone number
      description: Use this endpoint to release and remove a phone number. You'll no longer have access to it once you remove it. Provide an ID in the path.
      operationId: deletePhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The phone number has been deleted. Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /webhooks/phoneNumbers/port:
    x-access: private
    post:
      tags:
        - Phone Number Webhooks
      x-access: private
      summary: Port a phone number
      description: THIS IS INTERNAL ENDPOINT. Use this endpoint to port a phone number.
      operationId: portPhoneNumber
      requestBody:
        description: In the request body, pass the PhoneNumberRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberRequest'
      responses:
        201:
          description: The phone number has been ported. Returns a port number.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /recordings:
    get:
      tags:
        - Recordings
      summary: List recordings
      description: Use this endpoint to retrieve all recordings stored with Inperium. The operation supports paging, sorting, and filtering.
      operationId: getRecordings
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
        - name: phoneNumberId
          description: The ID of the phone number the recording is linked to.
          in: query
          schema:
            type: string
        - name: autoReceptionistId
          description: The ID of the auto receptionist the recording is linked to.
          in: query
          schema:
            type: string
        - name: userId
          description: The ID of the user the recording is linked to.
          in: query
          schema:
            type: string
        - name: state
          description: The `READ` or `UNREAD` status.
          in: query
          schema:
            type: string
        - name: type
          description: The type of recording.
          in: query
          schema:
            type: string
        - name: url
          description: The URL of recording.
          in: query
          schema:
            type: string
      responses:
        200:
          description: The recordings have been retrieved. Returns recordings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recordings'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /recordings/{id}:
    get:
      tags:
        - Recordings
      summary: Retrieve a recording
      description: Use this endpoint to get a specific recording by its ID. Provide an ID in the path.
      operationId: getRecording
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The recording has been retrieved. Returns the recording.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recording'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Recordings
      summary: Partically update recording
      description: Use this endpoint to partially modify a recording and its properties. Provide an ID in the path.
      operationId: updateRecording
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the updated RecordingRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordingRequest'
      responses:
        200:
          description: The recording has been updated. Returns the recording.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recording'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Recordings
      summary: Delete recording
      description: Use this endpoint to remove a recording. Provide an ID in the path.
      operationId: deleteRecording
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The recording has been deleted. Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /recordings/{id}/transcribe:
    post:
      tags:
        - Recordings
      summary: Transcribe recording
      description: Use this endpoint to initiate a transcription job and transcribe a recording. Provide an ID in the path.
      operationId: transcribeRecording
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        206:
          description: The transcription job has been accepted. Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles:
    get:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Retrieve regulatory bundles
      description: THIS IS INTERNAL ENDPOINT.
      operationId: getRegulatoryBundles
      parameters:
        - name: type
          in: query
          description: Filter parameter by "type"
          schema:
            type: string
        - name: status
          in: query
          description: Filter parameter by "status"
          schema:
            type: string
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The regulatory bundles have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundles'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Create new regulatory bundle
      description: THIS IS INTERNAL ENDPOINT.
      operationId: createRegulatoryBundle
      requestBody:
        description: Regulation bundle information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegulatoryBundleRequest'
        required: true
      responses:
        201:
          description: The regulatory bundle have been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/{id}:
    get:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Retrieve the regulatory bundle by id
      description: THIS IS INTERNAL ENDPOINT.
      operationId: getRegulatoryBundle
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The regulatory bundle have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Update regulatory bundle by id
      description: THIS IS INTERNAL ENDPOINT.
      operationId: updateRegulatoryBundle
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Regulation bundle information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegulatoryBundleRequest'
        required: true
      responses:
        200:
          description: The regulatory bundle have been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Delete a regulatory bundle by id
      description: THIS IS INTERNAL ENDPOINT.
      operationId: deleteRegulatoryBundle
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/{id}/sendToReview:
    post:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Send the regulatory bundle to review
      description: THIS IS INTERNAL ENDPOINT.
      operationId: sendRegulatoryBundleToReview
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The regulatory requirements have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/requirements:
    get:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Retrieve the list of requirements
      description: THIS IS INTERNAL ENDPOINT.
      operationId: getRegulatoryRequirements
      parameters:
        - name: countryCode
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CountryCode'
        - name: type
          in: query
          required: true
          description: Phone number type
          schema:
            type: string
      responses:
        200:
          description: The regulatory requirements have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundleRequirements'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/callbacks:
    post:
      tags:
        - Regulatory Bundles
      x-access: private
      summary: Twilio callback for notify about changes status of regulatory bundle status
      description: THIS IS INTERNAL ENDPOINT.
      operationId: regulatoryBundleCallback
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                BundleSid:
                  type: string
                Status:
                  type: string
                FailureReason:
                  type: string
      responses:
        204:
          description: Returns an empty response.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /reports:
    get:
      tags:
        - Reports
      summary: List reports
      description: Use this endpoint to retrieve a list of available reports. This operation supports paging and sorting.
      operationId: getReports
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The reports have been retrieved. Returns reports.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /reports/{id}/data:
    get:
      tags:
        - Report Data
      summary: Retrieve report data
      description: Use this endpoint to see report data returned by a specific report. Provide a report ID in the path.
      operationId: getReportData
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - name: from
          in: query
          required: true
          description: The start date.
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          required: true
          description: The finish date.
          schema:
            type: integer
            format: int64
        - name: who
          in: query
          description: The report can show data for the currently authenticated user (ME) or the whole team (TEAM).
          schema:
            type: string
            enum:
              - ME
              - TEAM
      responses:
        200:
          description: The report data has been retrieved. Returns report data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportData'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /services/transcribe:
    post:
      tags:
        - Services
      summary: Convert audio to text
      description: Use this endpoint to transcribe audio file.
      operationId: transcribeAudioFile
      requestBody:
        description: In the request body, pass the audio file to transcribe.
        content:
          audio/*:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Returns a transcription of the audio.
          content:
            application/json:
              schema:
                type: string
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /services/textToSpeech:
    post:
      tags:
        - Services
      summary: Convert text to audio
      description: Use this endpoint to generate an audio file based on provided text sample.
      operationId: textToSpeech
      requestBody:
        description: In the request body, pass the TextToSpeechRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToSpeechRequest'
      responses:
        200:
          description: The text has been converted in audio. Returns an audio file.
          content:
            audio/*:
              schema:
                type: string
                format: binary
        default:
          description: Bad request, security violation, or internal server error.
          content:
            audio/*:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /services/phoneNumbersToBuy:
    get:
      tags:
        - Services
      summary: List phone numbers for sale
      description: Use this endpoint to retrieve a list of phone numbers that can be purchased in Inperium Talk.
      operationId: findPhoneNumbersAvailableToBuy
      parameters:
        - name: countryCode
          description: The country phone code.
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CountryCode'
        - name: areaCode
          in: query
          description: The area phone code.
          schema:
            type: string
        - name: type
          in: query
          description: The type of a phone number that can be `TOLL_FREE` or `LOCAL`.
          schema:
            $ref: '#/components/schemas/PhoneNumberType'
      responses:
        200:
          description: The phone numbers have been retrieved. Returns available phone numbers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailablePhoneNumber'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /tenantSettings:
    x-access: private
    get:
      x-access: private
      tags:
        - Tenant Settings
      summary: Retrieve tenant settings.
      description: THIS IS INTERNAL ENDPOINT. Use this endpoint to get settings configured on the tenant level. This operation supports paging and sorting.
      operationId: getTenantSettings
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The tenant settings have been retrieved. Returns tenant settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSettings'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /users/{id}/phoneNumbers:
    post:
      tags:
        - Phone Numbers
      summary: Assign to user
      description: Use this endpoint to assign a phone number to a user. Provide a user ID in the path.
      operationId: assignUserPhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: In the request body, pass the phone number IDs.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Id'
      responses:
        201:
          description: The phone number has been created and assigned to the user.
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /userSettings:
    get:
      tags:
        - User Settings
      summary: List user settings
      description: Use this endpoint to retrieve settings for a currently authenticated user.
      operationId: getUserSettings
      responses:
        200:
          description: The user settings have been retrieved. Returns user settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - User Settings
      summary: Update user settings
      description: Use this endpoint to modify and overwrite current user settings.
      operationId: updateUserSettings
      requestBody:
        description: In the request body, pass the UserSettingsRequest object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingsRequest'
      responses:
        200:
          description: The user settings have been modified. Returns user settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /voicemails:
    get:
      x-access: private
      tags:
        - Voicemails
      summary: Retrieve the voicemails
      description: THIS IS INTERNAL ENDPOINT.
      operationId: getVoicemails
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
        - name: phoneNumberId
          in: query
          schema:
            type: string
        - name: autoReceptionistId
          in: query
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
      responses:
        200:
          description: The voicemail contents have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recordings'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /voicemails/{id}:
    patch:
      x-access: private
      tags:
        - Voicemails
      summary: Update (partially) the voicemail
      description: THIS IS INTERNAL ENDPOINT.
      operationId: updateVoicemail
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordingRequest'
      responses:
        200:
          description: The voicemail has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recording'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      x-access: private
      tags:
        - Voicemails
      summary: Delete a voicemail
      description: THIS IS INTERNAL ENDPOINT.
      operationId: deleteVoicemail
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The voicemail has been deleted
          content: { }
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /widgets:
    get:
      tags:
        - Widgets
      summary: List widgets
      description: Use this endpoint to retrieve a list of available widgets. This operation supports paging, sorting, and filtering.
      operationId: getWidgets
      parameters:
        - name: from
          in: query
          required: true
          description: The start date.
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          required: true
          description: The finish date.
          schema:
            type: integer
            format: int64
        - name: who
          in: query
          description: The widgets can show data for the currently authenticated user (ME) or the whole team (TEAM).
          schema:
            type: string
            enum:
              - ME
              - TEAM
      responses:
        200:
          description: The widgets have been retrieved. Returns widgets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Widgets'
        default:
          description: Bad request, security violation, or internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

components:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: This token is generated when a user enters credentials. Although you can leverage this token when making API calls, please note that due to security concerns it frequently expires.
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: The API key is a secure key generated by Inperium that can be used for authentication. The API key has an expiration date after which your API requests will be denied by the server.

  parameters:

    ResourceId:
      name: id
      in: path
      description: A unique object identifier.
      required: true
      schema:
        type: string
        format: uuid
    SubresourceId:
      name: subId
      in: path
      description: A unique object identifier.
      required: true
      schema:
        type: string
        format: uuid
    QueryPageNumber:
      name: pageNumber
      in: query
      description: This parameter affects paging. It defines the chunk of data to be retrieved, e.g., records from the page 3.
      schema:
        type: integer
        format: int64
    QueryPageSize:
      name: pageSize
      in: query
      description: This parameter affects paging. It defines the number of records per page.
      schema:
        type: integer
        format: int64
    QuerySort:
      name: sort
      in: query
      description: This parameter affects sorting. It specifies the property name to sort records, e.g., by price or date.
      schema:
        type: string

  schemas:

    Health:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - UP
            - DOWN

    Info:
      type: object
      required:
        - build
      properties:
        build:
          $ref: '#/components/schemas/Build'

    Build:
      type: object
      required:
        - description
        - name
        - artifact
        - version
      properties:
        description:
          type: string
          example: Inperium Server Talk Implementation
        name:
          type: string
          example: Inperium Server Talk
        artifact:
          type: string
          example: server-talk
        version:
          type: string
          example: 1.0.0

    ResponseError:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: HTTP status code.
        code:
          type: string
          format: uuid
          description: An optional exception code.
        message:
          type: string
          description: The human-readable localized error message.
        errors:
          type: object
          description: Mapping fields to errors.

    Id:
      type: string
      format: uuid
      description: A unique identifier.

    CountryCode:
      type: string
      description: A two-letter country code as defined by ISO 3166-1 alpha-2.

    TimezoneId:
      type: string
      description: A timezone value.

    PageAndSort:
      type: object
      description: Paging and sorting information.

    AudioFiles:
      type: object
      description: The list of audio files with paging and sorting information.
      required:
        - data
        - paging
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AudioFile'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    AudioFile:
      type: object
      description: An audio file stored with Inperium Talk. For example, a greeting prompt.
      required:
        - id
        - name
        - url
        - duration
        - origin
        - predefined
        - createdAt
        - updatedAt
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: The audio file title.
        url:
          type: string
          description: The audio file URL in the Object Bucket Storage service.
        duration:
          type: number
          description: The audio duration, in seconds.
        origin:
          $ref: '#/components/schemas/AudioFileOrigin'
        predefined:
          type: boolean
          description: This parameter defines if the audio file is predefined and cannot be modified (TRUE), or is custom and can be updated (FALSE).
        createdAt:
          type: integer
          format: int64
          description: The date the audio file was created.
        updatedAt:
          type: integer
          format: int64
          description: The date the audio file was updated.
    AudioFileUploadRequest:
      type: object
      description: The audio file object that is submitted to Inperium Talk as a part of the upload request.
      required:
        - file
        - duration
        - origin
      properties:
        file:
          type: string
          format: binary
          description: The source file to be uploaded.
        name:
          type: string
          description: An optional document name.
        duration:
          type: number
          description: The audio duration, in seconds.
        origin:
          $ref: '#/components/schemas/AudioFileOrigin'
    AudioFileUpdateRequest:
      type: object
      description: The audio file object that is submitted to Inperium Talk as a part of the update request.
      properties:
        file:
          type: string
          format: binary
          description: The source file to be uploaded.
        name:
          type: string
          description: An optional document name.
        duration:
          type: number
          description: The audio duration, in seconds.
        origin:
          $ref: '#/components/schemas/AudioFileOrigin'
    AudioFileOrigin:
      type: string
      enum:
        - TEXT_TO_SPEECH
        - UPLOAD
        - RECORD
      description: The source the audio file came from.
    TextToSpeechRequest:
      type: object
      description: The request model to convert a text to an audio.
      required:
        - text
        - voice
      properties:
        text:
          type: string
          description: The text to be converted to an audio.
        voice:
          type: string
          description: The voice to dub the text.
        audioFormat:
          type: string
          enum:
            - MP3
          default: MP3
          description: The audio format. Default is `MP3`.

    AutoReceptionistRequest:
      type: object
      description: The auto receptionist request object is submitted to Talk API when you configure a new auto receptionist.
      required:
        - name
        - phoneNumbers
        - businessHoursPart
        - closedHoursPart
        - twentyFourSeven
        - businessHours
      properties:
        name:
          type: string
          description: The auto receptionist name.
        extension:
          type: string
          description: The phone extension code.
        operatorIds:
          type: array
          description: The list of users who will be granted access to this auto receptionist. Provide IDs.
          items:
            $ref: '#/components/schemas/Id'
        phoneNumberIds:
          type: array
          description: The list of phone numbers. Provide IDs.
          items:
            $ref: '#/components/schemas/Id'
        businessHoursPart:
          description: Settings during business hours.
          $ref: '#/components/schemas/AutoReceptionistRequestPart'
        closedHoursPart:
          description: Settings during off-duty hours.
          $ref: '#/components/schemas/AutoReceptionistRequestPart'
        twentyFourSeven:
          type: boolean
          description: This parameters defines if the auto receptionist operates 24/7.
        businessHours:
          type: array
          description: The list of time slots.
          items:
            $ref: '#/components/schemas/BusinessHour'
        timezone:
          $ref: '#/components/schemas/TimezoneId'
    AutoReceptionistRequestPart:
      type: object
      description: The object defines auto receptionist behavior during specific time slots. Depending on the `routeTo` option you choose, provide either `ivrMenu`, `autoReceptionistId`,`userId`, `voicemailId`, or `callQueue` details.
      required:
        - routeTo
      properties:
        greetingPromptId:
          $ref: '#/components/schemas/Id'
          description: The ID of the audio file containing a greeting prompt or any intro sounds. Inperium Talk plays this audio when a call starts.
        routeTo:
          $ref: '#/components/schemas/AutoReceptionistStrategy'
        ivrMenu:
          $ref: '#/components/schemas/IVRMenuRequest'
        autoReceptionistId:
          $ref: '#/components/schemas/Id'
          description: The ID of a linked auto receptionist.
        userId:
          $ref: '#/components/schemas/Id'
          description: The ID of a linked user.
        voicemailId:
          $ref: '#/components/schemas/Id'
          description: The ID of a linked user.
        callQueue:
          type: string # TODO
          description: The queue the call gets assigned to.
    AutoReceptionist:
      type: object
      description: The object describes how auto receptionist will handle the incoming calls to certain phone numbers.
      required:
        - id
        - name
        - phoneNumbers
        - businessHoursPart
        - closedHoursPart
        - twentyFourSeven
        - businessHours
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: The auto receptionist name.
        extension:
          type: string
          description: The phone extension code.
        operators:
          type: array
          description: The list of users in charge of this auto receptionist.
          items:
            $ref: '#/components/schemas/User'
        phoneNumbers:
          type: array
          description: The list of phone numbers the auto receptionist is enabled for.
          items:
            $ref: '#/components/schemas/PhoneNumber'
        businessHoursPart:
          description: Settings during business hours.
          $ref: '#/components/schemas/AutoReceptionistPart'
        closedHoursPart:
          description: Settings during off-duty hours.
          $ref: '#/components/schemas/AutoReceptionistPart'
        twentyFourSeven:
          type: boolean
          description: This parameters defines if the auto receptionist operates 24/7.
        businessHours:
          type: array
          description: The list of time slots.
          items:
            $ref: '#/components/schemas/BusinessHour'
        timezone:
          $ref: '#/components/schemas/TimezoneId'
    AutoReceptionistPart:
      type: object
      description: The object defines auto receptionist behavior during specific time slots. Depending on the `routeTo` option, returns either `ivrMenu`, `autoReceptionistId`,`userId`, `voicemailId`, or `callQueue` details.
      required:
        - routeTo
      properties:
        greetingPrompt:
          $ref: '#/components/schemas/AudioFile'
          description: The audio file containing a greeting prompt or any intro sounds. Inperium Talk plays this audio when a call starts.
        routeTo:
          $ref: '#/components/schemas/AutoReceptionistStrategy'
        ivrMenu:
          $ref: '#/components/schemas/IVRMenu'
        autoReceptionist:
          $ref: '#/components/schemas/AutoReceptionist'
        user:
          $ref: '#/components/schemas/User'
        voicemail:
          $ref: '#/components/schemas/AudioFile'
        callQueue:
          type: string # TODO
          description: The queue the call gets assigned to.
    AutoReceptionistStrategy:
      type: string
      description: The auto receptionist behavior. Depending on the option you choose, the auto receptionist can forward a call to a voicemail or a user, move a call to a waiting queue, allow callers to pick an option from IVR menu, or forward a call to another auto receptionist. This object defines the options you can configure in the AutoReceptionistRequestPart object.
      enum:
        - VOICEMAIL
        - USER
        - AUTO_RECEPTIONIST
        - IVR_MENU
        - CALL_QUEUE # TODO
    AutoReceptionists:
      type: object
      description: The list of auto receptionists with paging and sorting.
      required:
        - data
        - paging
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AutoReceptionist'
        paging:
          $ref: '#/components/schemas/PageAndSort'

    PhoneNumbers:
      type: object
      description: The list of phone numbers with paging and sorting.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    PhoneNumber:
      type: object
      description: The phone number object contains information about the phone number itself as well as assignment type, forwarding settings, and other details.
      required:
        - id
        - phoneNumber
        - type
        - timeout
        - countryCode
        - whatsappEnabled
        - callForwardingEnabled
        - useDefaultCallForwarding
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumber:
          type: string
          description: The full number including the country code.
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        timeout:
          $ref: '#/components/schemas/PhoneNumberTimeout'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        whatsappEnabled:
          type: boolean
          description: This parameter defines if the phone number supports WhatsApp messaging.
        name:
          type: string
          description: The phone number title. It can be a number itself or a title like 'Renewals team'.
        assignmentType:
          $ref: '#/components/schemas/PhoneNumberAssignmentType'
        voicemail:
          $ref: '#/components/schemas/AudioFile'
        autoReceptionist:
          $ref: '#/components/schemas/AutoReceptionist'
        user:
          $ref: '#/components/schemas/User'
        regulatoryBundle:
          $ref: '#/components/schemas/RegulatoryBundle'
        city:
          type: string
          description: The city where phone number resides.
        state:
          type: string
          description: The state where phone number resides.
        address:
          $ref: '#/components/schemas/Address'
        callForwardingEnabled:
          type: boolean
        useDefaultCallForwarding:
          type: boolean
        callForwarding:
          $ref: '#/components/schemas/CallForwarding'
    PhoneNumberAssignmentType:
      type: string
      description: This parameter defines to whom the phone number is assigned on a high level.
      enum:
        - USER
        - UNASSIGNED
        - AUTO_RECEPTIONIST
    PhoneNumberType:
      type: string
      description: The type of the phone number.
      enum:
        - LOCAL
        - TOLL_FREE
    PhoneNumberTimeout:
      type: integer
      description: The timeout set for this phone number. The call gets finished after reaching the timeout.
    PhoneNumberRequest:
      type: object
      description: The object is submitted to Inperium Talk API when you create a new phone number.
      required:
        - phoneNumber
        - type
        - countryCode
        - callForwardingEnabled
        - useDefaultCallForwarding
      properties:
        phoneNumber:
          type: string
          description: A full phone number.
        twilioSid:
          type: string
          description: A unique indetifier.
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        name:
          type: string
          description: The phone number title. It can be the number itself or a title like 'Renewals team'.
          maxLength: 63
        voicemailId:
          $ref: '#/components/schemas/Id'
        autoReceptionistId:
          $ref: '#/components/schemas/Id'
        userId:
          $ref: '#/components/schemas/Id'
        callQueueId:
          $ref: '#/components/schemas/Id'
        regulatoryBundle:
          $ref: '#/components/schemas/RegulatoryBundle'
        timeout:
          $ref: '#/components/schemas/PhoneNumberTimeout'
        city:
          type: string
          description: The city where phone number resides.
        state:
          type: string
          description: The state where phone number resides.
        addressId:
          $ref: '#/components/schemas/Id'
        whatsappEnabled:
          type: boolean
          description: This parameter defines if WhatsApp messaging is enabled for this phone number.
        callForwardingEnabled:
          type: boolean
          default: false
          description: This parameter defines if call forwarding is enabled for this phone number.
        useDefaultCallForwarding:
          type: boolean
          default: false
          description: This parameter defines if default call forwarding settings are enabled for this phone number.
        callForwarding:
          $ref: '#/components/schemas/CallForwarding'
    PhoneNumberPatchRequest:
      type: object
      properties:
        phoneNumber:
          type: string
        twilioSid:
          type: string
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        name:
          type: string
          description: The given name of the phone number
          example: Maxim's phone number
          maxLength: 63
        voicemailId:
          $ref: '#/components/schemas/Id'
        autoReceptionistId:
          $ref: '#/components/schemas/Id'
        userId:
          $ref: '#/components/schemas/Id'
        callQueueId:
          $ref: '#/components/schemas/Id'
        regulatoryBundle:
          $ref: '#/components/schemas/RegulatoryBundle'
        timeout:
          $ref: '#/components/schemas/PhoneNumberTimeout'
        city:
          type: string
        state:
          type: string
        addressId:
          $ref: '#/components/schemas/Id'
        whatsappEnabled:
          type: boolean
        callForwardingEnabled:
          type: boolean
          default: false
        useDefaultCallForwarding:
          type: boolean
          default: false
        callForwarding:
          $ref: '#/components/schemas/CallForwarding'
    IVRMenuRequest:
      required:
        - audioPromptId
        - actions
      type: object
      description: The request object describes the IVR menu settings and possible options.
      properties:
        audioPromptId:
          $ref: '#/components/schemas/Id'
          description: The ID of the audio file. This audio typically includes instructions such as "For English, press one".
        actions:
          type: array
          description: The list of IVR options.
          items:
            $ref: '#/components/schemas/IVRAction'
        noAction:
          $ref: '#/components/schemas/IVRNoActionRequest'
    IVRMenu:
      type: object
      description: The object describes the IVR menu settings and possible options.
      required:
        - audioPrompt
        - actions
      properties:
        audioPrompt:
          $ref: '#/components/schemas/AudioFile'
        actions:
          type: array
          description: The list of IVR options.
          items:
            $ref: '#/components/schemas/IVRAction'
        noAction:
          $ref: '#/components/schemas/IVRNoActionResponse'
    IVRAction:
      required:
        - digit
        - action
      type: object
      description: The object maps the IVR menu option with an action. For example, 1 forwards a call to voicemail.
      properties:
        digit:
          type: string
          description: The digit or a sign the user can select after listening to the audio prompt. Supports digits 0-9, asterisk, and hash.
        action:
          $ref: '#/components/schemas/IVRActionStrategy'
        actionEntityId:
          type: string
          description: The ID of the exact action selected. For example, the voice
          format: uuid
    Addresses:
      type: object
      description: The list of addresses with paging and sorting.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Address:
      description: The address details.
      allOf:
        - $ref: '#/components/schemas/AddressRequest'
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/Id'
    AddressRequest:
      type: object
      description: The address details object that is submitted to Inperium Talk API.
      required:
        - addressLine1
        - city
        - state
        - zip
        - countryCode
      properties:
        addressLine1:
          type: string
          description: The street, apartment, office.
        addressLine2:
          type: string
          description: The street, apartment, office.
        city:
          type: string
          description: The city or town name.
        zip:
          type: string
          description: The post code.
        state:
          type: string
          description: The state.
        countryCode:
          $ref: '#/components/schemas/CountryCode'
    AvailablePhoneNumber:
      type: object
      description: The phone number the user can purchase and start using in Inperium Talk.
      required:
        - name
        - phoneNumber
        - countryCode
        - city
        - type
        - addressRequirements
      properties:
        name:
          type: string
          description: The name of a phone number.
        phoneNumber:
          type: string
          description: The full number including a country code.
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        city:
          type: string
          description: The city where phone number resides.
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        addressRequirements:
          type: string
          description: Any applicable address requirements or restrictions.
          enum:
            - NONE
            - ANY
            - LOCAL
            - FOREIGN
        postalCode:
          type: string
          description: The post code.
        state:
          type: string
          description: The state where phone number resides.
        basePrice:
          type: number
          description: The standard price.
        currentPrice:
          type: number
          description: The current price can differ from the `basePrice`.
    RegulatoryBundles:
      type: object
      description: The list of regulatory bundles with paging and sorting.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundle'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    RegulatoryBundle:
      type: object
      description: The object lists the local regulation you've got to follow in order to use the phone number.
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: The regulation name.
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        type:
          type: string
          description: The regulation type.
        status:
          type: string
          description: The status of this regulation.
    RegulatoryBundleRequest:
      type: object
      description: The object describes the local regulation you've got to follow in order to use the phone number.
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: The regulation name.
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        type:
          type: string
          description: The regulation type.
        status:
          type: string
          description: The status of this regulation.
    RegulatoryBundleRequirements:
      type: object
      description: The list of applicable requirements.
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundleRequirementField'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundleRequirementDocument'
    RegulatoryBundleRequirementField:
      type: object
      description: A regulation entry.
      properties:
        name:
          type: string
          description: A name.
        type:
          type: string
          description: A type.
        requirement_name:
          type: string
          description: An applicable requirement.
    RegulatoryBundleRequirementDocument:
      type: object
      description: A referenced document.
      properties:
        name:
          type: string
          description: A name.
        description:
          type: string
          description: Document details.
        type:
          type: string
          description: A document type.
        requirement_name:
          type: string
          description: An applicable requirement.
        accepted_documents:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundleRequirementDocument'
    CallWebhookRequest:
      type: object
      required:
        - AccountSid
        - CallSid
        - From
        - To
        - CallStatus
      properties:
        AccountSid:
          type: string
        From:
          type: string
        To:
          type: string
        CallSid:
          type: string
        CallStatus:
          type: string
          enum:
            - queued
            - initiated
            - ringing
            - in-progress
            - completed
            - busy
            - failed
            - no-answer
            - canceled
        FromNumberId:
          $ref: '#/components/schemas/Id'
          description: Custom parameter from client for outbound call.
        ToNumber:
          type: string
          description: Custom parameter from client for outbound call.
    CallStatusWebhookRequest:
      type: object
      properties:
        AccountSid:
          type: string
          example: AC1cbf432e3c57ad809874c6960e81af10
        From:
          type: string
          example: +12056428233
        To:
          type: string
          example: client:c160ee62_22ca_4d96_9ce2_079b9f6dde2f
        CallSid:
          type: string
          example: CA4e6e303921de90840d352c95cca6af8b
        CallStatus:
          type: string
          example: initiated
          enum:
            - queued
            - initiated
            - ringing
            - in-progress
            - completed
            - busy
            - failed
            - no-answer
            - canceled
        Timestamp:
          type: string
          example: Fri, 09 Jul 2021 14:39:33 +0000
        Direction:
          type: string
          example: outbound-api
        CallbackSource:
          type: string
          example: call-progress-events
        SequenceNumber:
          type: integer
          example: 0
    AddParticipantRequest:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          type: string
    CallChangeRequest:
      type: object
      description: The object submitted to Talk API to start or finish a call recording.
      properties:
        record:
          type: boolean
          description: The parameter defines if the call is recorded.
    CallRequest:
      type: object
      description: The object initiates a call.
      properties:
        sid:
          type: string
        caller:
          $ref: '#/components/schemas/CallParticipantRequest'
          description: The user starting the call.
        recipient:
          $ref: '#/components/schemas/CallParticipantRequest'
          description: The user receiving the call.
        twiml:
          type: string
          description: Instructions for the call.
    CallParticipantRequest:
      type: object
      description: The request object defines the person taking part in the call.
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumberEntityId:
          $ref: '#/components/schemas/Id'
          description: The ID of the participant's phone number.
        phoneNumber:
          type: string
          description: The full phone number including the country code.
        webAgentId:
          $ref: '#/components/schemas/Id'
          description: The user's ID in Inperium Talk, if exists.
        hold:
          type: boolean
          description: The parameter defines the participant's status such as active (FALSE) or on hold (TRUE).
    CallParticipant:
      type: object
      description: The object defines the person taking part in the call.
      required:
        - id
        - hold
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumberEntity:
          $ref: '#/components/schemas/PhoneNumber'
        phoneNumber:
          type: string
          description: The full phone number including the country code.
        contact:
          $ref: '#/components/schemas/Contact'
        hold:
          type: boolean
          description: The parameter defines the participant's status such as active (FALSE) or on hold (TRUE).
        status:
          $ref: '#/components/schemas/ParticipantStatus'
    Calls:
      type: object
      description: The list of calls with paging and sorting.
      required:
        - data
        - paging
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Call'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Call:
      type: object
      description: The object contains all information about the call, its participants, direction, etc.
      required:
        - id
        - caller
        - recipient
        - participants
        - direction
        - record
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/Id'
        duration:
          type: integer
          format: int64
          description: The call duration in milliseconds.
        caller:
          $ref: '#/components/schemas/CallParticipant'
          description: Information about the user who initiated the call.
        recipient:
          $ref: '#/components/schemas/CallParticipant'
          description: Information about the user who received the call.
        participants:
          type: array
          description: The list of all call participants irrespective of their role.
          items:
            $ref: '#/components/schemas/CallParticipant'
        direction:
          $ref: '#/components/schemas/CallDirection'
        status:
          $ref: '#/components/schemas/CallStatus'
        recording:
          $ref: '#/components/schemas/Recording'
        record:
          type: boolean
          description: If set to true, the call is being recorded now.
        createdAt:
          type: integer
          format: int64
          description: The timestamp when the call was created.
    CallStatus:
      description: The status of the call.
      type: string
      enum:
        - IN_PROGRESS
        - FINISHED
    ParticipantStatus:
      description: The status of the participant.
      type: string
      enum:
        - STARTED
        - QUEUED
        - INITIATED
        - RINGING
        - IN_PROGRESS
        - COMPLETED
        - BUSY
        - FAILED
        - NO_ANSWER
        - CANCELED
        - FORWARDED # TODO to remove
    CallDirection:
      description: Inbound or outbound call.
      type: string
      enum:
        - INBOUND
        - OUTBOUND
    ParticipantChangeRequestBody:
      type: object
      description: The object allows updating a participant's state such as put a person on hold or mute him or her.
      properties:
        hold:
          type: boolean
          description: The parameter defines the participant's status such as active (FALSE) or on hold (TRUE).
        muted:
          type: boolean
          description: The parameter defines the participant's status such as active (FALSE) or on muted (TRUE).
    ParticipantChangeRequest:
      type: object
      description: The object allows updating a participant's state.
      # TODO return inheritance (allOf with discriminator propertyName: schema)
      required:
        - participantId
      properties:
        participantId:
          $ref: '#/components/schemas/Id'
        hold:
          type: boolean
          description: The parameter defines the participant's status such as active (FALSE) or on hold (TRUE).
        muted:
          type: boolean
          description: The parameter defines the participant's status such as active (FALSE) or on muted (TRUE).
    VoiceToken:
      type: object
      description: The capability token.
      properties:
        token:
          type: string
          description: Twilio capability token.
    Contacts:
      type: object
      description: The list of contacts with paging and sorting.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Contact:
      type: object
      description: The object contains contact details.
      required:
        - id
        - firstName
        - shared
        - phoneNumbers
        - emails
        - user
      # TODO return inheritance (allOf with discriminator propertyName: schema)
      properties:
        id:
          $ref: '#/components/schemas/Id'
        firstName:
          type: string
          description: The contact's first name.
        lastName:
          type: string
          description: The contact's family name.
        companyName:
          type: string
          description: The business name.
        shared:
          type: boolean
          description: The parameter marks if this contact is shared with all users in your organization. When set to `FALSE`, only you will see it.
        user:
          $ref: '#/components/schemas/User'
        addressLine1:
          type: string
          description: The street, apartment, office.
        addressLine2:
          type: string
          description: The street, apartment, office.
        city:
          type: string
          description: The city or town name.
        zip:
          type: string
          description: The post code.
        state:
          type: string
          description: The state where the contact resides.
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        avatarUrl:
          type: string
          description: The URL to contact's profile image.
        phoneNumbers:
          type: array
          description: The list of phone numbers.
          items:
            $ref: '#/components/schemas/ContactPhoneNumber'
        emails:
          type: array
          description: The list of emails.
          items:
            $ref: '#/components/schemas/ContactEmail'
    ContactRequest:
      type: object
      description: The request object that is sent to Inperium Talk when you create or update a contact.
      required:
        - firstName
        - shared
        - phoneNumbers
        - emails
      properties:
        firstName:
          type: string
          description: The contact's first name.
        lastName:
          type: string
          description: The contact's family name.
        companyName:
          type: string
          description: The business name.
        shared:
          type: boolean
          description: The parameter marks if this contact is shared with all users in your organization. When set to `FALSE`, only you will see it.
        addressLine1:
          type: string
          description: The street, apartment, office.
        addressLine2:
          type: string
          description: The street, apartment, office.
        city:
          type: string
          description: The city or town name.
        zip:
          type: string
          description: The post code.
        state:
          type: string
          description: The state where the contact resides.
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        avatarUrl:
          type: string
          description: The URL to contact's profile image.
        phoneNumbers:
          type: array
          description: The list of phone numbers.
          items:
            $ref: '#/components/schemas/ContactPhoneNumber'
        emails:
          type: array
          description: The list of emails.
          items:
            $ref: '#/components/schemas/ContactEmail'
    ContactInfoType:
      type: string
      description: The type of contact.
      enum:
        - WORK
        - PERSONAL
        - OTHER
    ContactPhoneNumber:
      type: object
      description: The object contains the contact's phone number details.
      required:
        - phoneNumber
        - type
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumber:
          type: string
          description: The full phone number including the country code.
        type:
          $ref: '#/components/schemas/ContactInfoType'
    ContactEmail:
      type: object
      description: The object contains the contact's email details.
      required:
        - email
        - type
      properties:
        id:
          $ref: '#/components/schemas/Id'
        email:
          type: string
          description: The email address.
        type:
          $ref: '#/components/schemas/ContactInfoType'
    Recordings:
      type: object
      description: The list of recordings with paging and sorting.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Recording'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Recording:
      type: object
      description: An audio file.
      required:
        - id
        - createdAt
        - call
        - state
      properties:
        id:
          $ref: '#/components/schemas/Id'
        url:
          type: string
          description: The URL to an audio file.
        duration:
          type: integer
          format: int64
          description: The duration in milliseconds.
        message:
          type: string
          description: The message passed along with audio file.
        createdAt:
          type: integer
          format: int64
          description: The timestamp the recording was captured.
        call:
          $ref: '#/components/schemas/Call'
        state:
          $ref: '#/components/schemas/RecordingState'

    RecordingRequest:
      type: object
      description: The request object with recording details.
      properties:
        state:
          $ref: '#/components/schemas/RecordingState'

    RecordingState:
      type: string
      enum:
        - UNREAD
        - READ
      description: The status of a recording.

    Reports:
      type: object
      description: The list of reports with paging data.
      required:
        - data
        - paging
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Report'
        paging:
          $ref: '#/components/schemas/PageAndSort'

    Report:
      type: object
      description: The object contains the report description without actual report data.
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: The report title.

    ReportData:
      type: object
      description: Unlike the Report object that provides just a description, this object contains actual data. It provides values for the X-axis and Y-axis that can be further presented as a chart.
      required:
        - chartType
        - yAxis
        - xAxises
        - xAxisesDifferences
      properties:
        chartType:
          type: string
          description: The type of the chart and data presentation.
          enum:
            - LINE
            - MULTI_BAR
        xAxis:
          $ref: '#/components/schemas/ReportDataXAxis'
        yAxises:
          type: array
          description: The list of Y-axis values.
          items:
            $ref: '#/components/schemas/ReportDataYAxis'
        yAxisesDifferences:
          type: array
          description: The list of Y-axis values.
          items:
            $ref: '#/components/schemas/ReportDataYAxis'

    ReportDataXAxis:
      type: object
      description: The values for X-axis.
      required:
        - label
        - data
        - unit
      properties:
        unit:
          type: string
          description: The measurement units such as seconds.
        label:
          type: string
          description: The name of the units on the X-axis such as 'number of calls'.
        data:
          type: array
          description: The results.
          items:
            type: object

    ReportDataYAxis:
      type: object
      description: The values for Y-axis.
      required:
        - label
        - data
        - unit
      properties:
        unit:
          type: string
          description: The measurement units such as numbers.
        label:
          type: string
          description: The name of the units on the Y-axis such as 'duration of call'.
        data:
          type: array
          description: The results.
          items:
            type: object

    DayOfWeek:
      type: string
      description: Days of the week.
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    IVRActionStrategy:
      type: string
      description: An action outcome of the IVR menu.
      enum:
        - VOICEMAIL_USER
        - VOICEMAIL_AUTO_RECEPTIONIST
        - FORWARD_USER
        - FORWARD_AUTO_RECEPTIONIST
        - DIAL_BY_NAME
        - REPEAT_AUDIO_PROMPT
    IVRNoActionRequest:
      type: object
      description: This object defines behavior if a user hasn't specified an option in the IVR menu.
      required:
        - noActionStrategy
        - noActionCount
      properties:
        strategy:
          $ref: '#/components/schemas/IVRNoActionStrategy'
        count:
          type: integer
          minimum: 1
          maximum: 5
          description: The 'no response' counter.
        targetId:
          $ref: '#/components/schemas/Id'
    IVRNoActionResponse:
      type: object
      description: The response object for a situation of a caller specified no action.
      properties:
        strategy:
          $ref: '#/components/schemas/IVRNoActionStrategy'
        count:
          type: integer
          minimum: 1
          maximum: 5
          description: The 'no response' counter.
        voicemail:
          $ref: '#/components/schemas/AudioFile'
    IVRNoActionStrategy:
      type: string
      description: Auto receptionist behavior in case a caller submitted no answer in the IVR menu.
      enum:
        - DISCONNECT
        - VOICEMAIL
        - REPEAT_MENU
    TenantSetting:
      type: object
      description: The object contains general tenant settings.
      required:
        - twilioAccountSid
        - twilioApiKeySid
        - twilioApiKeySecret
      properties:
        twilioAccountSid:
          type: string
          description: The account SID.
        twilioApiKeySid:
          type: string
          description: The API Key SID for the tenants Twilio sub account.
        twilioApiKeySecret:
          type: string
          description: The API Key Secret for the tenants Twilio sub account.
    TenantSettings:
      type: object
      description: The list of tenant settings with paging and sorting.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TenantSetting'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    UserSettingsRequest:
      type: object
      description: The request object creates or modifies user settings.
      properties:
        voicemailId:
          $ref: '#/components/schemas/Id'
          description: The ID of an associated voicemail.
        defaultPhoneNumberId:
          $ref: '#/components/schemas/Id'
          description: The ID of a default phone number.
        defaultCallForwarding:
          $ref: '#/components/schemas/CallForwarding'
    UserSettings:
      type: object
      description: The object contains information about user settings.
      properties:
        voicemail:
          $ref: '#/components/schemas/AudioFile'
        defaultPhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        defaultCallForwarding:
          $ref: '#/components/schemas/CallForwarding'
    User:
      type: object
      description: Information about Inperium Talk user.
      properties:
        id:
          $ref: '#/components/schemas/Id'
        email:
          type: string
          description: An email address.
        firstName:
          type: string
          description: The user's first name.
        lastName:
          type: string
          description: The user's family name.
        jobTitle:
          type: string
          description: The user's job title.
        avatarUrl:
          type: string
          description: The URL where the user's profile image is stored.
      required:
        - id
        - email

    Widgets:
      type: object
      description: The Widgets object is an aggregation of smaller widget components. It gives you insights into your activity. To learn more about charts and analytics, refer to Inperium user documentation.
      properties:
        totalCalls:
          $ref: '#/components/schemas/TotalCallsWidget'
        missedCalls:
          $ref: '#/components/schemas/MissedCallsWidget'
        totalCallsTime:
          $ref: '#/components/schemas/TotalCallsTimeWidget'
        averageCallTime:
          $ref: '#/components/schemas/AverageCallTimeWidget'
        liveCalls:
          $ref: '#/components/schemas/LiveCallsWidget'
        callsDuration:
          $ref: '#/components/schemas/CallsDurationWidget'
        callsVolume:
          $ref: '#/components/schemas/CallsVolumeWidget'
        userStatisticsCalls:
          $ref: '#/components/schemas/UserStatisticsCallsWidget'
        callsByCountries:
          $ref: '#/components/schemas/CallsByCountriesWidget'
        agentStatus:
          $ref: '#/components/schemas/AgentStatusWidget'

    TotalCallsWidget:
      type: object
      description: The widget that shows the total number of calls.
      required:
        - inbound
        - inboundDifference
        - outbound
        - outboundDifference
      properties:
        inbound:
          type: integer
          format: int64
          description: The number of inbound calls.
        inboundDifference:
          type: integer
          format: int64
          description: The difference compared to a previous period.
        outbound:
          type: integer
          format: int64
          description: The number of outbound calls.
        outboundDifference:
          type: integer
          format: int64
          description: The difference compared to a previous period.

    MissedCallsWidget:
      type: object
      description: The widget that shows missing calls.
      required:
        - missed
        - missedDifference
      properties:
        missed:
          type: integer
          format: int64
          description: The number of missing calls.
        missedDifference:
          type: integer
          format: int64
          description: The difference compared to a previous period.

    TotalCallsTimeWidget:
      type: object
      description: The widget that shows the overall call duration.
      required:
        - totalTime
        - totalTimeDifference
      properties:
        totalTime:
          type: integer
          format: int64
          description: Aggregated calls duration.
        totalTimeDifference:
          type: integer
          format: int64
          description: The difference compared to a previous period.

    AverageCallTimeWidget:
      type: object
      description: The widget that shows a median call duration.
      required:
        - time
        - timeDifference
      properties:
        time:
          type: integer
          format: int64
          description: An average call duration.
        timeDifference:
          type: integer
          format: int64
          description: The difference compared to a previous period.

    LiveCallsWidget:
      type: object
      description: The widget shows the number of call answered live and those in queue.
      required:
        - inProgress
        - inQueue
      properties:
        inProgress:
          type: integer
          format: int64
          description: The number of active calls.
        inQueue:
          type: integer
          format: int64
          description: The number of call in the queue.

    CallsDurationWidget:
      type: object
      description: The widget that shows calls duration.
      required:
        - durations
      properties:
        durations:
          type: array
          items:
            $ref: '#/components/schemas/CallsDurationWidgetDurations'

    CallsDurationWidgetDurations:
      type: object
      description: Call duration statistics.
      required:
        - hour
        - averageInbound
        - averageOutbound
        - todayInbound
        - todayOutbound
      properties:
        hour:
          type: integer
          description: Total hours.
        averageInbound:
          type: integer
          format: int64
          description: An average inbound call duration.
        averageOutbound:
          type: integer
          format: int64
          description: An average outbound call duration.
        todayInbound:
          type: integer
          format: int64
          description: Inbound calls duration today.
        todayOutbound:
          type: integer
          format: int64
          description: Outbound calls duration today.

    CallsVolumeWidget:
      type: object
      description: The widget that shows calls by type.
      required:
        - volumes
      properties:
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/CallsVolumeWidgetVolumes'

    CallsVolumeWidgetVolumes:
      type: object
      description: The calls volume statistics.
      required:
        - hour
        - answeredInbound
        - answeredOutbound
        - missedInbound
        - missedOutbounÐ²
        - voicemailsInbound
        - voicemailsOutbound
      properties:
        hour:
          type: integer
          description: Total hours.
        answeredInbound:
          type: integer
          format: int64
          description: The number of answered inbound calls.
        answeredOutbound:
          type: integer
          format: int64
          description: The number of answered outbound calls.
        missedInbound:
          type: integer
          format: int64
          description: The number of missing inbound calls.
        missedOutbound:
          type: integer
          format: int64
          description: The number of missing outbound calls.
        voicemailsInbound:
          type: integer
          format: int64
          description: The number of inbound voicemails.
        voicemailsOutbound:
          type: integer
          format: int64
          description: The number of outbound voicemails.

    UserStatisticsCallsWidget:
      type: object
      description: The widget that shows user statistics and presents it as a leaderboard.
      required:
        - statistics
      properties:
        statistics:
          type: array
          description: The statistic per user.
          items:
            $ref: '#/components/schemas/UserStatisticsCallsWidgetStatistics'

    UserStatisticsCallsWidgetStatistics:
      type: object
      description: This object is an entry in the UserStatisticsCallsWidget and contains data for a specific Inperium Talk user.
      required:
        - firstName
        - lastName
        - inbound
        - outbound
        - averageTime
        - forwardedToVoicemail
        - missed
        - total
      properties:
        firstName:
          type: string
          description: The user's first name.
        lastName:
          type: string
          description: The user's family name.
        avatarUrl:
          type: string
          description: The URL of user's profile image.
        inbound:
          type: integer
          format: int64
          description: The number of inbound calls.
        outbound:
          type: integer
          format: int64
          description: The number of outbound calls.
        averageTime:
          type: integer
          format: int64
          description: An average call duration.
        forwardedToVoicemail:
          type: integer
          format: int64
          description: The number of calls forwarded to voicemail.
        missed:
          type: integer
          format: int64
          description: The number of missed calls.
        total:
          type: integer
          format: int64
          description: The total number of calls.

    CallsByCountriesWidget:
      type: object
      description: The widget that shows calls by destination.
      required:
        - calls
      properties:
        calls:
          type: array
          description: The list of countries.
          items:
            $ref: '#/components/schemas/CallsByCountriesWidgetCalls'

    CallsByCountriesWidgetCalls:
      type: object
      description: An entry in the CallsByCountriesWidget.
      required:
        - countryCode
        - inbound
        - outbound
        - total
      properties:
        countryCode:
          type: string
          description: The country code.
        inbound:
          type: integer
          format: int64
          description: The number of inbound calls.
        outbound:
          type: integer
          format: int64
          description: The number of outbound calls.
        total:
          type: integer
          format: int64
          description: The total number of calls.

    AgentStatusWidget:
      type: object
      description: The widget that shows users' statuses.
      required:
        - avaliable
        - onCall
      properties:
        avaliable:
          type: integer
          format: int64
          description: The number of available users.
        onCall:
          type: integer
          format: int64
          description: The number of users on call.

    BusinessHour:
      type: object
      description: The operational hours entry.
      required:
        - openHour
        - closeHour
        - weekday
        - enabled
      properties:
        openHour:
          type: string
          format: x-time
          description: The hours when business operates.
        closeHour:
          type: string
          format: x-time
          description: The hours when business is off-duty.
        weekday:
          $ref: '#/components/schemas/DayOfWeek'
        enabled:
          type: boolean
          description: The parameter defines if the business hours schedule is turned on (TRUE) or not (FALSE).

    CallForwarding:
      type: object
      description: The rules for call forwarding.
      required:
        - phoneNumber
        - twentyFourSeven
        - businessHours
      properties:
        phoneNumber:
          type: string
          description: The full phone number including the country code.
        timezone:
          $ref: '#/components/schemas/TimezoneId'
        twentyFourSeven:
          type: boolean
          description: The parameter that defines if the forwarding is enabled all the time.
        businessHours:
          type: array
          description: The list of business hour entries.
          items:
            $ref: '#/components/schemas/BusinessHour'
