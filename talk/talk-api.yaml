openapi: 3.0.3

info:
  title: Inperium Server Talk API
  description: |
    The initial version of Inperium Server Hub API.
  version: 1.0.0-SNAPSHOT

servers:
  - url: http://api.inperium.com/v1/talk
  - url: https://api.inperium.com/v1/talk

security:
  - BearerAuth: [ ]
  - ApiKeyAuth: [ ]

paths:
  /health:
    get:
      tags:
        - Health Checks
      summary: Checks the health of the microservice
      operationId: checkHealth
      responses:
        200:
          description: An empty response that is used for OK non-returning operations
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /audioFiles:
    get:
      tags:
        - Audio Files
      summary: Get list of audio files
      operationId: getAudioFiles
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The list of audio files have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFiles'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Audio Files
      summary: Upload a new audio file
      operationId: uploadAudioFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioFileRequest'
      responses:
        201:
          description: The audio file have been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFile'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /audioFiles/{id}:
    get:
      tags:
        - Audio Files
      summary: Get direct link to the audio file by id
      operationId: getAudioFile
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: Direct link to audio file location in file storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFileLink'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Audio Files
      summary: Delete the audio file
      operationId: deleteAudioFile
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The audio file has been deleted
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Audio Files
      summary: Update (partially) the audio file
      operationId: updateAudioFile
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioFileUpdateRequest'
      responses:
        200:
          description: The audio file have been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioFile'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /services/textToSpeech:
    post:
      tags:
        - Services
      summary: Convert text into audio
      operationId: textToSpeech
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToSpeechRequest'
      responses:
        200:
          description: The synthesized audio
          content:
            audio/*:
              schema:
                type: string
                format: binary
        default:
          description: Bad request, security violation, or internal server error
          content:
            audio/*:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /services/phoneNumbersToBuy:
    get:
      tags:
        - Services
      summary: Retrieve a list of available phone numbers from Twilio
      operationId: findPhoneNumbersAvailableToBuy
      parameters:
        - name: countryCode
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CountryCode'
        - name: areaCode
          in: query
          description: The rate center of the phone number
          schema:
            type: string
        - name: type
          in: query
          description: Filter phone numbers by type
          schema:
            $ref: '#/components/schemas/PhoneNumberType'
      responses:
        200:
          description: The list of phone numbers has been retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailablePhoneNumber'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /phoneNumbers:
    get:
      tags:
        - Phone Numbers
      summary: Retrieve a list of phone numbers
      operationId: getPhoneNumbers
      parameters:
        - name: assignmentType
          in: query
          description: Filter by the assignment type
          schema:
            type: string
            example: eq::USER
        - name: number
          in: query
          description: Search parameters by the phone number
          schema:
            minLength: 3
            type: string
        - name: type
          in: query
          description: Filter by the phone number type
          schema:
            type: string
            example: eq::LOCAL
        - name: regulatoryStatus
          in: query
          description: Filter by the status of the phone number's regulatory bundle
          schema:
            type: string
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The phone numbers have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbers'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Phone Numbers
      summary: Buy and create a list of Twilio phone numbers
      operationId: buyPhoneNumbers
      requestBody:
        description: List of phone numbers to create and buy
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PhoneNumberRequest'
      responses:
        200:
          description: A list of new Twilio phone numbers has been created and bought
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /phoneNumbers/{id}:
    get:
      tags:
        - Phone Numbers
      summary: Retrieve phone number details by its ID
      operationId: getPhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The phone number details have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Phone Numbers
      summary: Update a phone number
      operationId: updatePhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Updated phone number specification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberRequest'
      responses:
        200:
          description: The phone number details have been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Phone Numbers
      summary: Delete a phone number
      operationId: deletePhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The phone number has been deleted
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /phoneNumbers/{id}/voicemails:
    get:
      tags:
        - Voice Mails
      summary: Retrieve the list of voice mails for phone number
      operationId: getPhoneNumberVoiceMails
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The list of voice mails have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recordings'
        default:
          description: Bad request, security violation, or internal server error
          content:
            audio/*:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /autoReceptionists/{id}/voicemails:
    get:
      tags:
        - Voice Mails
      summary: Retrieve the list of voice mails for auto receptionist
      operationId: getReceptionistVoiceMails
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The list of voice mails have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recordings'
        default:
          description: Bad request, security violation, or internal server error
          content:
            audio/*:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /users/{id}/voicemails:
    get:
      tags:
        - Voice Mails
      summary: Retrieve the mp3 voice mail for user
      operationId: getUserVoiceMails
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The voice mail contents have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recordings'
        default:
          description: Bad request, security violation, or internal server error
          content:
            audio/*:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /users/{id}/phoneNumbers:
    post:
      tags:
        - Phone Numbers
      summary: Add a phone number and assign it to the user
      operationId: assignUserPhoneNumber
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Id'
      responses:
        201:
          description: The phone number has been created and assigned to the user
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /autoReceptionists:
    get:
      tags:
        - Auto Receptionists
      summary: Retrieve a list of auto receptionists.
      operationId: findAutoReceptionists
      parameters:
        - name: name
          in: query
          description: Filter by name
          schema:
            type: string
            example: like::Some name
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The auto receptionists have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionists'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Auto Receptionists
      summary: Create a new auto receptionist
      operationId: createAutoReceptionist
      requestBody:
        description: Auto receptionist to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReceptionistRequest'
      responses:
        201:
          description: A new auto receptionist has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /autoReceptionists/{id}:
    get:
      tags:
        - Auto Receptionists
      summary: Retrieve details of the auto receptionist by its ID
      operationId: findAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The details of the auto receptionist have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Auto Receptionists
      summary: Partially update an auto receptionist
      operationId: partiallyUpdateAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Partially updated auto receptionist specification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReceptionistRequest'
      responses:
        200:
          description: The auto receptionist has been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Auto Receptionists
      summary: Update an auto receptionist
      operationId: updateAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Updated auto receptionist specification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReceptionistRequest'
      responses:
        200:
          description: The auto receptionist has been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReceptionist'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Auto Receptionists
      summary: Delete an auto receptionist
      operationId: deleteAutoReceptionist
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The auto receptionist has been deleted
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /calls/callbacks/ivr/{id}:
    post:
      tags:
        - IVR Callbacks
      summary: Callback for doing IVR
      operationId: numberIVRCallback
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallSid:
                  type: string
                Digits:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /calls/callbacks/ivr/{id}/noAction/{count}:
    post:
      tags:
        - IVR Callbacks
      summary: Callback for handling when a user enters no action for IVR menu
      operationId: noActionIVRCallback
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - name: count
          description: How many times we play this IVR menu
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                To:
                  type: string
                CallSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /addresses:
    get:
      tags:
        - Addresses
      summary: Retrieve addresses
      operationId: getAddresses
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The addresses have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Addresses
      summary: Create a new address for the tenant
      operationId: createAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        201:
          description: A new address has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /regulatoryBundles:
    get:
      tags:
        - Regulatory Bundles
      summary: Retrieve regulatory bundles
      operationId: getRegulatoryBundles
      parameters:
        - name: type
          in: query
          description: Filter parameter by "type"
          schema:
            type: string
        - name: status
          in: query
          description: Filter parameter by "status"
          schema:
            type: string
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The regulatory bundles have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundles'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Regulatory Bundles
      summary: Create new regulatory bundle
      operationId: createRegulatoryBundle
      requestBody:
        description: Regulation bundle information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegulatoryBundleRequest'
        required: true
      responses:
        201:
          description: The regulatory bundle have been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/{id}:
    get:
      tags:
        - Regulatory Bundles
      summary: Retrieve the regulatory bundle by id
      operationId: getRegulatoryBundle
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The regulatory bundle have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Regulatory Bundles
      summary: Update regulatory bundle by id
      operationId: updateRegulatoryBundle
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Regulation bundle information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegulatoryBundleRequest'
        required: true
      responses:
        200:
          description: The regulatory bundle have been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Regulatory bundles
      summary: Delete a regulatory bundle by id
      operationId: deleteRegulatoryBundle
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: An empty response that is used for OK non-returning operations
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/{id}/sendToReview:
    post:
      tags:
        - Regulatory bundles
      summary: Send the regulatory bundle to review
      operationId: sendRegulatoryBundleToReview
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The regulatory requirements have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundle'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/requirements:
    get:
      tags:
        - Regulatory bundles
      summary: Retrieve the list of requirements
      operationId: getRegulatoryRequirements
      parameters:
        - name: countryCode
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CountryCode'
        - name: type
          in: query
          required: true
          description: Phone number type
          schema:
            type: string
      responses:
        200:
          description: The regulatory requirements have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryBundleRequirements'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /regulatoryBundles/callbacks:
    post:
      tags:
        - Regulatory bundles
      summary: Twilio callback for notify about changes status of regulatory bundle status
      operationId: regulatoryBundleCallback
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                BundleSid:
                  type: string
                Status:
                  type: string
                FailureReason:
                  type: string
      responses:
        204:
          description: An empty response that is used for OK non-returning operations
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /calls:
    get:
      tags:
        - Calls
      summary: Retrieve a list of voice calls
      operationId: getCalls
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
        - name: direction
          in: query
          description: Query parameter for the "direction" filter
          schema:
            type: string
        - name: status
          in: query
          description: Query parameter for the "status" filter
          schema:
            type: string
        - name: phoneNumberId
          in: query
          description: Query parameter for the "phoneNumberId" filter
          schema:
            type: string
        - name: phoneNumber
          in: query
          description: Query parameter for the "phoneNumber" filter
          schema:
            type: string
      responses:
        200:
          description: The list of voice calls has been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calls'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Calls
      summary: Create an outcoming call
      operationId: createCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallRequest'
      responses:
        201:
          description: A new voice call started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/find/{sid}:
    get:
      tags:
        - Calls
      summary: Get a Voice call by Twilio call sid
      operationId: findBySid
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/token:
    get:
      tags:
        - Calls
      summary: Get a Twillio token for Voice API SDK
      operationId: getVoiceToken
      responses:
        200:
          description: A new Twilio voice token has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceToken'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/{id}:
    get:
      tags:
        - Calls
      summary: Get a voice call by its ID
      operationId: getCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Calls
      summary: Partially update a voice call
      operationId: patchCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Call to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallChangeRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Calls
      summary: Update a voice call
      operationId: updateCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Call to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Calls
      summary: Delete a voice call
      operationId: deleteCallById
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: An empty response that is used for OK non-returning operations
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/{id}/join:
    post:
      tags:
        - Calls
      summary: Join a call
      operationId: joinCall
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: The participant who joins a call
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallParticipantRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /participants/{id}:
    patch:
      tags:
        - Participants
      summary: Update participant
      operationId: patchParticipant
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantChangeRequestBody'
        required: false
      responses:
        200:
          description: The participant has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Participants
      summary: Delete participant from conference
      operationId: removeParticipant
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The participant has been deleted
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /participants:
    patch:
      tags:
        - Participants
      summary: Update list of participants
      operationId: patchParticipants
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ParticipantChangeRequest'
      responses:
        200:
          description: The updated participants have been retreived
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CallParticipant'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/conference/{id}:
    post:
      tags:
        - Call Callbacks
      summary: Twilio callback for call conference
      operationId: conferenceCallback
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ConferenceSid:
                  type: string
                SequenceNumber:
                  type: string
                StatusCallbackEvent:
                  type: string
                CallSid:
                  type: string
                AccountSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/fallback:
    post:
      tags:
        - Call Callbacks
      summary: Add a fallback URL in case of error during the call
      operationId: fallbackCall
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                From:
                  type: string
                To:
                  type: string
                CallSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/inbound:
    post:
      tags:
        - Call Callbacks
      summary: Notify about new inbound call on Twilio number
      operationId: startInboundCall
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                To:
                  type: string
                From:
                  type: string
                AccountSid:
                  type: string
                CallSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/outbound:
    post:
      tags:
        - Call Callbacks
      summary: Notify about the start of outbound Twilio call
      operationId: startOutboundCall
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallId:
                  type: string
                  format: uuid
                CallSid:
                  type: string
                To:
                  type: string
                From:
                  type: string
                AccountSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/status:
    post:
      tags:
        - Call Callbacks
      summary: Set the status of the current Twilio call
      operationId: setCallStatus
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallSid:
                  type: string
                To:
                  type: string
                From:
                  type: string
                AccountSid:
                  type: string
                CallStatus:
                  type: string
      responses:
        200:
          description: The status has been accepted
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/forward:
    post:
      tags:
        - Call Callbacks
      summary: Forward the incoming call if the agent does not answer in the browser
      operationId: forwardIncomingCall
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                DialCallStatus:
                  type: string
                CallSid:
                  type: string
                CallStatus:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/join:
    post:
      tags:
        - Call Callbacks
      summary: Twilio callback for call client on app
      operationId: joinUserToCall
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                AnsweredBy:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/recording:
    post:
      tags:
        - Recording Callbacks
      summary: Instruct Twilio to make a POST request when the recording has finished
      operationId: saveRecording
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                RecordingUrl:
                  type: string
                RecordingSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/recording/{type}/{typeId}:
    post:
      tags:
        - Recording Callbacks
      summary: Instruct Twilio to make a POST request when the recording has finished
      operationId: saveRecordingWithType
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: typeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                RecordingUrl:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /calls/callbacks/{id}/status/{participantId}:
    post:
      tags:
        - Call Callbacks
      summary: Twilio callback for status call
      operationId: callStatus
      parameters:
        - $ref: '#/components/parameters/ResourceId'
        - name: participantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                CallStatus:
                  type: string
                CallSid:
                  type: string
      responses:
        200:
          description: TwiML response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /calls/callbacks/{id}/transcribe:
    post:
      tags:
        - Recording Callbacks
      summary: Instruct Twilio to make an asynchronous POST request when the transcription
        for recording is complete
      operationId: saveRecordingMessage
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                TranscriptionText:
                  type: string
                TranscriptionStatus:
                  type: string
      responses:
        200:
          description: Empty response has been received
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /contacts:
    get:
      tags:
        - Contacts
      summary: Retrieve a list of contacts
      operationId: getContacts
      parameters:
        - $ref: '#/components/parameters/QueryPageNumber'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          description: The contacts have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Contacts
      summary: Create a new contact
      operationId: createContact
      requestBody:
        description: Contact to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      responses:
        201:
          description: A new contact has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Retrieve details of the contact by its ID
      operationId: getContact
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        200:
          description: The details of the contact have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - Contacts
      summary: Update a contact
      operationId: updateContact
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      requestBody:
        description: Updated contact specification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      responses:
        200:
          description: The contact has been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
        - Contacts
      summary: Delete a contact
      operationId: deleteContact
      parameters:
        - $ref: '#/components/parameters/ResourceId'
      responses:
        204:
          description: The contact has been deleted
          content: { }
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /userSettings:
    get:
      tags:
        - User Settings
      summary: Retrieve user settings of current user
      operationId: getUserSettings
      responses:
        200:
          description: The user settings have been retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
        - User Settings
      summary: Update a contact
      operationId: updateUserSettings
      requestBody:
        description: Updated user settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingsRequest'
      responses:
        200:
          description: The user settings have been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /widgets:
    get:
      tags:
        - Widgets
      summary: Widgets
      operationId: getWidgets
      parameters:
        - name: from
          in: query
          required: true
          description: The date when the widgets data set calculation starts
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          required: true
          description: The date when the widgets data set calculation starts
          schema:
            type: integer
            format: int64
        - name: who
          in: query
          description: The widgets can show data for the currently authenticated user (ME) or the whole team (TEAM).
          schema:
            type: string
            enum:
              - ME
              - TEAM
      responses:
        200:
          description: Widgets
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Widgets'
        default:
          description: Bad request, security violation, or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
components:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  parameters:

    ResourceId:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    QueryPageNumber:
      name: pageNumber
      in: query
      description: Query parameter for the "pageNumber"
      schema:
        type: integer
        format: int64
    QueryPageSize:
      name: pageSize
      in: query
      description: Query parameter for the "pageSize"
      schema:
        type: integer
        format: int64
    QuerySort:
      name: sort
      in: query
      description: Query parameter for the "sort" criteria
      schema:
        type: string

  schemas:

    ResponseError:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Http status code
        code:
          type: string
          format: uuid
          description: Optional code of the exception
        message:
          type: string
          description: Error message
        errors:
          type: object
          description: Map of field -> list of errors

    Id:
      type: string
      format: uuid

    CountryCode:
      type: string
      description: Country code (ISO alpha-2)

    TimezoneId:
      type: string
      description: Timezone value

    PageAndSort:
      type: object
      description: Paging and sorting information

    AudioFiles:
      type: object
      required:
        - data
        - paging
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AudioFile'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    AudioFileLink:
      type: object
      required:
        - link
      properties:
        link:
          type: string
          description: Direct link to audio file location in file storage
    AudioFile:
      # TODO use inheritance (allOf with discriminator propertyName: schema)
      type: object
      description: Audio file
      required:
        - id
        - name
        - duration
        - origin
        - predefined
        - createdAt
        - updatedAt
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: Name of the audio file
        duration:
          type: number
          description: Duration of the audio file
        origin:
          $ref: '#/components/schemas/AudioFileOrigin'
        predefined:
          type: boolean
          description: If the audio file is predefined and is not editable
        createdAt:
          type: integer
          format: int64
          description: Timestamp of the create
        updatedAt:
          type: integer
          format: int64
          description: Timestamp of the update
    AudioFileRequest:
      # TODO use inheritance (allOf with discriminator propertyName: schema)
      type: object
      description: Audio file upload request
      required:
        - file
        - duration
        - origin
      properties:
        file:
          type: string
          format: binary
          description: File to be uploaded as a audio file
        name:
          type: string
          description: Optional name of this document
        duration:
          type: number
          description: Duration of the audio in seconds
        origin:
          $ref: '#/components/schemas/AudioFileOrigin'
    AudioFileUpdateRequest:
      type: object
      description: Audio file update request
      properties:
        file:
          type: string
          format: binary
          description: File to be uploaded as a audio file
        name:
          type: string
          description: Optional name of this document
        duration:
          type: number
          description: Duration of the audio in seconds
        origin:
          $ref: '#/components/schemas/AudioFileOrigin'
    AudioFileOrigin:
      type: string
      enum:
        - TEXT_TO_SPEECH
        - UPLOAD
        - RECORD
      description: Type of origin of the uploaded audio
    TextToSpeechRequest:
      type: object
      description: Request model to convert text into audio
      required:
        - text
        - voice
      properties:
        text:
          type: string
          description: Text to be converted into audio
        voice:
          type: string
          description: Voice to dub the text
        audioFormat:
          type: string
          enum:
            - MP3
          default: MP3
          description: Format (type) of audio to be synthesized

    AutoReceptionistRequest:
      type: object
      required:
        - name
        - phoneNumbers
        - businessHoursPart
        - closedHoursPart
        - twentyFourSeven
        - businessHours
      properties:
        name:
          type: string
        extension:
          type: string
        operatorIds:
          type: array
          items:
            $ref: '#/components/schemas/Id'
        phoneNumberIds:
          type: array
          items:
            $ref: '#/components/schemas/Id'
        businessHoursPart:
          $ref: '#/components/schemas/AutoReceptionistRequestPart'
        closedHoursPart:
          $ref: '#/components/schemas/AutoReceptionistRequestPart'
        twentyFourSeven:
          type: boolean
          description: If the auto receptionist works as business hours 24/7
        businessHours:
          type: array
          items:
            $ref: '#/components/schemas/AutoReceptionistHour'
        timezone:
          $ref: '#/components/schemas/TimezoneId'
    AutoReceptionistRequestPart:
      type: object
      required:
        - routeTo
      properties:
        greetingPromptId:
          $ref: '#/components/schemas/Id'
        routeTo:
          $ref: '#/components/schemas/AutoReceptionistStrategy'
        ivrMenu:
          $ref: '#/components/schemas/IVRMenuRequest'
        autoReceptionistId:
          $ref: '#/components/schemas/Id'
        userId:
          $ref: '#/components/schemas/Id'
        voiceMailId:
          $ref: '#/components/schemas/Id'
        callQueue:
          type: string # TODO
    AutoReceptionist:
      type: object
      required:
        - id
        - name
        - phoneNumbers
        - businessHoursPart
        - closedHoursPart
        - twentyFourSeven
        - businessHours
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        extension:
          type: string
        operators:
          type: array
          items:
            $ref: '#/components/schemas/User'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        businessHoursPart:
          $ref: '#/components/schemas/AutoReceptionistPart'
        closedHoursPart:
          $ref: '#/components/schemas/AutoReceptionistPart'
        twentyFourSeven:
          type: boolean
          description: If the auto receptionist works as business hours 24/7
        businessHours:
          type: array
          items:
            $ref: '#/components/schemas/AutoReceptionistHour'
        timezone:
          $ref: '#/components/schemas/TimezoneId'
    AutoReceptionistPart:
      type: object
      required:
        - routeTo
      properties:
        greetingPrompt:
          $ref: '#/components/schemas/AudioFile'
        routeTo:
          $ref: '#/components/schemas/AutoReceptionistStrategy'
        ivrMenu:
          $ref: '#/components/schemas/IVRMenu'
        autoReceptionist:
          $ref: '#/components/schemas/AutoReceptionist'
        user:
          $ref: '#/components/schemas/User'
        voiceMail:
          $ref: '#/components/schemas/AudioFile'
        callQueue:
          type: string # TODO
    AutoReceptionistHour:
      type: object
      required:
        - openHour
        - closeHour
        - weekday
        - enabled
      properties:
        openHour:
          type: string
          format: x-time
        closeHour:
          type: string
          format: x-time
        weekday:
          $ref: '#/components/schemas/DayOfWeek'
        enabled:
          type: boolean
          description: If the business hour turned on or not
    AutoReceptionistStrategy:
      type: string
      enum:
        - VOICEMAIL
        - USER
        - AUTO_RECEPTIONIST
        - IVR_MENU
        - CALL_QUEUE # TODO
    AutoReceptionists:
      type: object
      required:
        - data
        - paging
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AutoReceptionist'
        paging:
          $ref: '#/components/schemas/PageAndSort'

    PhoneNumbers:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    PhoneNumber:
      type: object
      description: User phone number model
      required:
        - id
        - phoneNumber
        - type
        - timeout
        - countryCode
        - whatsappEnabled
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumber:
          type: string
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        timeout:
          $ref: '#/components/schemas/PhoneNumberTimeout'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        whatsappEnabled:
          type: boolean
        name:
          type: string
          description: The given name of the phone number
        assignmentType:
          $ref: '#/components/schemas/PhoneNumberAssignmentType'
        voicemail:
          $ref: '#/components/schemas/AudioFile'
        autoReceptionist:
          $ref: '#/components/schemas/AutoReceptionist'
        user:
          $ref: '#/components/schemas/User'
        regulatoryBundle:
          $ref: '#/components/schemas/RegulatoryBundle'
        city:
          type: string
        state:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    PhoneNumberAssignmentType:
      type: string
      description: Assignment type of the phone number (to whom is it assigned)
      enum:
        - USER
        - UNASSIGNED
        - AUTO_RECEPTIONIST
    PhoneNumberType:
      type: string
      description: Type of the phone number
      enum:
        - LOCAL
        - TOLL_FREE
    PhoneNumberTimeout:
      type: integer
      description: Timeout of the phone number (to finish the call)
    PhoneNumberRequest:
      type: object
      description: User phone number request model
      required:
        - phoneNumber
        - type
        - countryCode
      properties:
        phoneNumber:
          type: string
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        name:
          type: string
          description: The given name of the phone number
          example: Maxim's phone number
          maxLength: 63
        voicemailId:
          $ref: '#/components/schemas/Id'
        autoReceptionistId:
          $ref: '#/components/schemas/Id'
        userId:
          $ref: '#/components/schemas/Id'
        regulatoryBundle:
          $ref: '#/components/schemas/RegulatoryBundle'
        timeout:
          $ref: '#/components/schemas/PhoneNumberTimeout'
        city:
          type: string
        state:
          type: string
        addressId:
          $ref: '#/components/schemas/Id'
        whatsappEnabled:
          type: boolean
    IVRMenuRequest:
      required:
        - audioPromptId
        - actions
      type: object
      properties:
        audioPromptId:
          $ref: '#/components/schemas/Id'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/IVRAction'
        noAction:
          $ref: '#/components/schemas/IVRNoActionRequest'
    IVRMenu:
      type: object
      required:
        - audioPrompt
        - actions
      properties:
        audioPrompt:
          $ref: '#/components/schemas/AudioFile'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/IVRAction'
        noAction:
          $ref: '#/components/schemas/IVRNoActionResponse'
    IVRAction:
      required:
        - digit
        - action
      type: object
      properties:
        digit:
          type: string
        action:
          $ref: '#/components/schemas/IVRActionStrategy'
        actionEntityId:
          type: string
          format: uuid
    Addresses:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Address:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
      required:
        - id
    AddressRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
    AvailablePhoneNumber:
      type: object
      required:
        - name
        - phoneNumber
        - countryCode
        - city
        - type
        - addressRequirements
      properties:
        name:
          type: string
        phoneNumber:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        city:
          type: string
        type:
          $ref: '#/components/schemas/PhoneNumberType'
        addressRequirements:
          type: string
          enum:
            - NONE
            - ANY
            - LOCAL
            - FOREIGN
        postalCode:
          type: string
        state:
          type: string
        basePrice:
          type: number
        currentPrice:
          type: number
    RegulatoryBundles:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundle'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    RegulatoryBundle:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        type:
          type: string
        status:
          type: string
    RegulatoryBundleRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        type:
          type: string
        status:
          type: string
    RegulatoryBundleRequirements:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundleRequirementField'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundleRequirementDocument'
    RegulatoryBundleRequirementField:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        requirement_name:
          type: string
    RegulatoryBundleRequirementDocument:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        requirement_name:
          type: string
        accepted_documents:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryBundleRequirementDocument'
    CallChangeRequest:
      type: object
      properties:
        record:
          type: boolean
    CallRequest:
      example: { }
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        caller:
          $ref: '#/components/schemas/CallParticipantRequest'
        recipient:
          $ref: '#/components/schemas/CallParticipantRequest'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/CallParticipantRequest'
        direction:
          type: string
        status:
          type: string
        recording:
          $ref: '#/components/schemas/Recording'
        token:
          type: string
          description: Twilio capability token
    CallParticipantRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumberEntityId:
          $ref: '#/components/schemas/Id'
        phoneNumber:
          type: string
        webAgentId:
          $ref: '#/components/schemas/Id'
        hold:
          type: boolean
    CallParticipant:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Id'
        phoneNumberEntity:
          $ref: '#/components/schemas/PhoneNumber'
        phoneNumber:
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        hold:
          type: boolean
        callStatus:
          type: string
    Calls:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Call'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Call:
      example: { }
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        duration:
          type: integer
          format: int64
          description: Call duration in seconds
        caller:
          $ref: '#/components/schemas/CallParticipant'
        recipient:
          $ref: '#/components/schemas/CallParticipant'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/CallParticipant'
        direction:
          type: string
        status:
          type: string
        recording:
          $ref: '#/components/schemas/Recording'
        token:
          type: string
          description: Twilio capability token
        record:
          type: boolean
          description: If true this call is being recorded now
        createdAt:
          type: integer
          format: int64
          description: Timestamp of the create
      required:
        - id
        - caller
        - participants
    ParticipantChangeRequestBody:
      type: object
      properties:
        hold:
          type: boolean
        muted:
          type: boolean
    ParticipantChangeRequest:
      type: object
      # TODO return inheritance (allOf with discriminator propertyName: schema)
      required:
        - participantId
      properties:
        participantId:
          $ref: '#/components/schemas/Id'
        hold:
          type: boolean
        muted:
          type: boolean
    VoiceToken:
      type: object
      properties:
        token:
          type: string
          description: Twilio capability token
    Contacts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Contact:
      type: object
      required:
        - id
        - firstName
        - lastName
        - companyName
        - shared
        - phoneNumbers
        - emails
      # TODO return inheritance (allOf with discriminator propertyName: schema)
      properties:
        id:
          $ref: '#/components/schemas/Id'
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        shared:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        avatarUrl:
          type: string
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/ContactPhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEmail'
    ContactRequest:
      type: object
      required:
        - firstName
        - lastName
        - companyName
        - shared
        - phoneNumbers
        - emails
      properties:
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        shared:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        avatarUrl:
          type: string
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/ContactPhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEmail'
    ContactPhoneNumber:
      type: object
      required:
        - phoneNumber
      properties:
        id:
          $ref: '#/components/schemas/Id'
        label:
          type: string
        phoneNumber:
          type: string
    ContactEmail:
      type: object
      required:
        - email
      properties:
        id:
          $ref: '#/components/schemas/Id'
        label:
          type: string
        email:
          type: string
    Recordings:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Recording'
        paging:
          $ref: '#/components/schemas/PageAndSort'
    Recording:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        url:
          type: string
        size:
          type: integer
          format: int64
        message:
          type: string
        createdAt:
          type: integer
          format: int64
          description: Timestamp of the create
        call:
          $ref: '#/components/schemas/Call'
    DayOfWeek:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    IVRActionStrategy:
      type: string
      enum:
        - VOICEMAIL_USER
        - VOICEMAIL_AUTO_RECEPTIONIST
        - FORWARD_USER
        - FORWARD_AUTO_RECEPTIONIST
        - DIAL_BY_NAME
        - REPEAT_AUDIO_PROMPT
    IVRNoActionRequest:
      type: object
      required:
        - noActionStrategy
        - noActionCount
      properties:
        strategy:
          $ref: '#/components/schemas/IVRNoActionStrategy'
        count:
          type: integer
          minimum: 1
          maximum: 5
        targetId:
          $ref: '#/components/schemas/Id'
    IVRNoActionResponse:
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/IVRNoActionStrategy'
        count:
          type: integer
          minimum: 1
          maximum: 5
        voiceMail:
          $ref: '#/components/schemas/AudioFile'
    IVRNoActionStrategy:
      type: string
      enum:
        - DISCONNECT
        - VOICEMAIL
        - REPEAT_MENU
    UserSettingsRequest:
      type: object
      properties:
        voiceMailId:
          $ref: '#/components/schemas/Id'
        defaultPhoneNumberId:
          $ref: '#/components/schemas/Id'
        forwardingPhoneNumber:
          type: string
    UserSettings:
      type: object
      properties:
        voiceMail:
          $ref: '#/components/schemas/AudioFile'
        defaultPhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        forwardingPhoneNumber:
          type: string
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        jobTitle:
          type: string
        avatarUrl:
          type: string
      required:
        - id
        - email
      description: User model

    Widgets:
      type: object
      properties:
        totalCalls:
          $ref: '#/components/schemas/TotalCallsWidget'
        missedCalls:
          $ref: '#/components/schemas/MissedCallsWidget'
        totalCallsTime:
          $ref: '#/components/schemas/TotalCallsTimeWidget'
        averageCallTime:
          $ref: '#/components/schemas/AverageCallTimeWidget'  
        liveCalls:
          $ref: '#/components/schemas/LiveCallsWidget'  
        callsDuration:
          $ref: '#/components/schemas/CallsDurationWidget'  
        callsVolume:
          $ref: '#/components/schemas/CallsVolumeWidget'  
        userStatisticsCalls:
          $ref: '#/components/schemas/UserStatisticsCallsWidget'  
        callsByCountries:
          $ref: '#/components/schemas/CallsByCountriesWidget'  
        agentStatus:
          $ref: '#/components/schemas/AgentStatusWidget'  
          
    TotalCallsWidget:
      type: object
      required:
        - inbound
        - inboundDifference
        - outbound
        - outboundDifference
      properties:
        inbound: 
          type: integer
          format: int64
        inboundDifference:
          type: integer
          format: int64        
        outbound:
          type: integer
          format: int64      
        outboundDifference:
          type: integer
          format: int64

    MissedCallsWidget:
      type: object
      required:
        - missed
        - missedDifference
      properties:
        missed: 
          type: integer
          format: int64
        missedDifference:
          type: integer
          format: int64        

    TotalCallsTimeWidget:
      type: object
      required:
        - totalTime
        - totalTimeDifference
      properties:
        totalTime: 
          type: integer
          format: int64
        totalTimeDifference:
          type: integer
          format: int64  

    AverageCallTimeWidget:
      type: object
      required:
        - time
        - timeDifference
      properties:
        time: 
          type: integer
          format: int64
        timeDifference:
          type: integer
          format: int64

    LiveCallsWidget:
      type: object
      required:
        - inProgress
        - inQueue
      properties:
        inProgress: 
          type: integer
          format: int64
        inQueue:
          type: integer
          format: int64

    CallsDurationWidget:
      type: object
      required:
        - durations
      properties:
        durations:
          type: array
          items:
            type: object
            required:
              - hour
              - averageInbound
              - averageOutbound
              - todayInbound
              - todayOutbound
            properties:
              hour: 
                type: integer
              averageInbound:
                type: integer
                format: int64
              averageOutbound:
                type: integer
                format: int64
              todayInbound:
                type: integer
                format: int64
              todayOutbound:
                type: integer
                format: int64

    CallsVolumeWidget:
      type: object
      required:
        - volumes
      properties:
        volumes:
          type: array
          items:
            type: object
            required:
              - hour
              - answeredInbound
              - answeredOutbound
              - missedInbound
              - missedOutbounв
              - voiceMailsInbound
              - voiceMailsOutbound
            properties:
              hour:
                type: integer
              answeredInbound:
                type: integer
                format: int64
              answeredOutbound:
                type: integer
                format: int64
              missedInbound:
                type: integer
                format: int64
              missedOutbound:
                type: integer
                format: int64                
              voiceMailsInbound:
                type: integer
                format: int64
              voiceMailsOutbound:
                type: integer
                format: int64                

    UserStatisticsCallsWidget:
      type: object
      required:
        - statistics
      properties:
        statistics:
          type: array
          items:
            type: object
            required:
              - firstName
              - lastName
              - inbound
              - outbound
              - averageTime
              - forwardedToVoiceMail
              - missed
              - total
            properties:
              firstName:
                type: string
              lastName:
                type: string
              avatarUrl: 
                type: string
              inbound:
                type: integer
                format: int64
              outbound:
                type: integer
                format: int64
              averageTime:
                type: integer
                format: int64
              forwardedToVoiceMail:
                type: integer
                format: int64
              missed:
                type: integer
                format: int64
              total:
                type: integer
                format: int64

      
    CallsByCountriesWidget:
      type: object
      required:
        - calls
      properties:
        calls:
          type: array
          items:
            type: object
            required:
              - countryCode
              - inbound
              - outbound
              - total
            properties:
              countryCode:
                type: string
              inbound: 
                type: integer
                format: int64
              outbound:
                type: integer
                format: int64
              total: 
                type: integer
                format: int64

    AgentStatusWidget:
      type: object
      required:
        - avaliable
        - onCall
      properties:
        avaliable:
          type: integer
          format: int64
        onCall:
          type: integer
          format: int64


